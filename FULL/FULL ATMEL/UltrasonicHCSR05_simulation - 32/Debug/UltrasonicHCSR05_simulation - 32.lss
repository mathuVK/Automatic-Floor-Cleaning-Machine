
UltrasonicHCSR05_simulation - 32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f5c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  00000f5c  00000ff0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  0080007a  0080007a  0000100a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000100a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000103c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00001078  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001149  00000000  00000000  00001108  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000834  00000000  00000000  00002251  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000855  00000000  00000000  00002a85  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000124  00000000  00000000  000032dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000516  00000000  00000000  00003400  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b47  00000000  00000000  00003916  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  0000445d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
   4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  24:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__vector_9>
  28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
  54:	00 40       	sbci	r16, 0x00	; 0
  56:	7a 10       	cpse	r7, r10
  58:	f3 5a       	subi	r31, 0xA3	; 163
  5a:	00 a0       	ldd	r0, Z+32	; 0x20
  5c:	72 4e       	sbci	r23, 0xE2	; 226
  5e:	18 09       	sbc	r17, r8
  60:	00 10       	cpse	r0, r0
  62:	a5 d4       	rcall	.+2378   	; 0x9ae <__mulsf3_pse+0x16>
  64:	e8 00       	.word	0x00e8	; ????
  66:	00 e8       	ldi	r16, 0x80	; 128
  68:	76 48       	sbci	r23, 0x86	; 134
  6a:	17 00       	.word	0x0017	; ????
  6c:	00 e4       	ldi	r16, 0x40	; 64
  6e:	0b 54       	subi	r16, 0x4B	; 75
  70:	02 00       	.word	0x0002	; ????
  72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
  74:	9a 3b       	cpi	r25, 0xBA	; 186
  76:	00 00       	nop
  78:	00 e1       	ldi	r16, 0x10	; 16
  7a:	f5 05       	cpc	r31, r5
  7c:	00 00       	nop
  7e:	80 96       	adiw	r24, 0x20	; 32
  80:	98 00       	.word	0x0098	; ????
  82:	00 00       	nop
  84:	40 42       	sbci	r20, 0x20	; 32
  86:	0f 00       	.word	0x000f	; ????
  88:	00 00       	nop
  8a:	a0 86       	std	Z+8, r10	; 0x08
  8c:	01 00       	.word	0x0001	; ????
  8e:	00 00       	nop
  90:	10 27       	eor	r17, r16
  92:	00 00       	nop
  94:	00 00       	nop
  96:	e8 03       	fmulsu	r22, r16
  98:	00 00       	nop
  9a:	00 00       	nop
  9c:	64 00       	.word	0x0064	; ????
  9e:	00 00       	nop
  a0:	00 00       	nop
  a2:	0a 00       	.word	0x000a	; ????
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	01 00       	.word	0x0001	; ????
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	2c 76       	andi	r18, 0x6C	; 108
  b0:	d8 88       	ldd	r13, Y+16	; 0x10
  b2:	dc 67       	ori	r29, 0x7C	; 124
  b4:	4f 08       	sbc	r4, r15
  b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
  b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
  ba:	ae 59       	subi	r26, 0x9E	; 158
  bc:	e1 b1       	in	r30, 0x01	; 1
  be:	b7 96       	adiw	r30, 0x27	; 39
  c0:	e5 e3       	ldi	r30, 0x35	; 53
  c2:	e4 53       	subi	r30, 0x34	; 52
  c4:	c6 3a       	cpi	r28, 0xA6	; 166
  c6:	e6 51       	subi	r30, 0x16	; 22
  c8:	99 76       	andi	r25, 0x69	; 105
  ca:	96 e8       	ldi	r25, 0x86	; 134
  cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__addsf3x+0x34>
  ce:	84 26       	eor	r8, r20
  d0:	eb 89       	ldd	r30, Y+19	; 0x13
  d2:	8c 9b       	sbis	0x11, 4	; 17
  d4:	62 ed       	ldi	r22, 0xD2	; 210
  d6:	40 7c       	andi	r20, 0xC0	; 192
  d8:	6f fc       	.word	0xfc6f	; ????
  da:	ef bc       	out	0x2f, r14	; 47
  dc:	9c 9f       	mul	r25, r28
  de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
  e0:	ba a5       	ldd	r27, Y+42	; 0x2a
  e2:	6f a5       	ldd	r22, Y+47	; 0x2f
  e4:	f4 90       	lpm	r15, Z
  e6:	05 5a       	subi	r16, 0xA5	; 165
  e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
  ea:	5c 93       	st	X, r21
  ec:	6b 6c       	ori	r22, 0xCB	; 203
  ee:	f9 67       	ori	r31, 0x79	; 121
  f0:	6d c1       	rjmp	.+730    	; 0x3cc <main+0x10a>
  f2:	1b fc       	.word	0xfc1b	; ????
  f4:	e0 e4       	ldi	r30, 0x40	; 64
  f6:	0d 47       	sbci	r16, 0x7D	; 125
  f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
  fa:	20 e6       	ldi	r18, 0x60	; 96
  fc:	b5 00       	.word	0x00b5	; ????
  fe:	d0 ed       	ldi	r29, 0xD0	; 208
 100:	90 2e       	mov	r9, r16
 102:	03 00       	.word	0x0003	; ????
 104:	94 35       	cpi	r25, 0x54	; 84
 106:	77 05       	cpc	r23, r7
 108:	00 80       	ld	r0, Z
 10a:	84 1e       	adc	r8, r20
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 20       	and	r0, r0
 110:	4e 0a       	sbc	r4, r30
 112:	00 00       	nop
 114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
 116:	0c 33       	cpi	r16, 0x3C	; 60
 118:	33 33       	cpi	r19, 0x33	; 51
 11a:	33 0f       	add	r19, r19
 11c:	98 6e       	ori	r25, 0xE8	; 232
 11e:	12 83       	std	Z+2, r17	; 0x02
 120:	11 41       	sbci	r17, 0x11	; 17
 122:	ef 8d       	ldd	r30, Y+31	; 0x1f
 124:	21 14       	cp	r2, r1
 126:	89 3b       	cpi	r24, 0xB9	; 185
 128:	e6 55       	subi	r30, 0x56	; 86
 12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
 12c:	fe e6       	ldi	r31, 0x6E	; 110
 12e:	db 18       	sub	r13, r11
 130:	d1 84       	ldd	r13, Z+9	; 0x09
 132:	4b 38       	cpi	r20, 0x8B	; 139
 134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
 136:	7c 1d       	adc	r23, r12
 138:	90 1d       	adc	r25, r0
 13a:	a4 bb       	out	0x14, r26	; 20
 13c:	e4 24       	eor	r14, r4
 13e:	20 32       	cpi	r18, 0x20	; 32
 140:	84 72       	andi	r24, 0x24	; 36
 142:	5e 22       	and	r5, r30
 144:	81 00       	.word	0x0081	; ????
 146:	c9 f1       	breq	.+114    	; 0x1ba <LCD_Char+0xc>
 148:	24 ec       	ldi	r18, 0xC4	; 196
 14a:	a1 e5       	ldi	r26, 0x51	; 81
 14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
 14e:	11 24       	eor	r1, r1
 150:	1f be       	out	0x3f, r1	; 63
 152:	cf e5       	ldi	r28, 0x5F	; 95
 154:	d8 e0       	ldi	r29, 0x08	; 8
 156:	de bf       	out	0x3e, r29	; 62
 158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
 15a:	10 e0       	ldi	r17, 0x00	; 0
 15c:	a0 e6       	ldi	r26, 0x60	; 96
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	ec e5       	ldi	r30, 0x5C	; 92
 162:	ff e0       	ldi	r31, 0x0F	; 15
 164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
 166:	05 90       	lpm	r0, Z+
 168:	0d 92       	st	X+, r0
 16a:	aa 37       	cpi	r26, 0x7A	; 122
 16c:	b1 07       	cpc	r27, r17
 16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
 170:	20 e0       	ldi	r18, 0x00	; 0
 172:	aa e7       	ldi	r26, 0x7A	; 122
 174:	b0 e0       	ldi	r27, 0x00	; 0
 176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
 178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
 17a:	ac 37       	cpi	r26, 0x7C	; 124
 17c:	b2 07       	cpc	r27, r18
 17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
 180:	0e 94 61 01 	call	0x2c2	; 0x2c2 <main>
 184:	0c 94 ac 07 	jmp	0xf58	; 0xf58 <_exit>

00000188 <__bad_interrupt>:
 188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <LCD_Command>:
 18c:	88 bb       	out	0x18, r24	; 24
 18e:	85 b3       	in	r24, 0x15	; 21
 190:	8c 7f       	andi	r24, 0xFC	; 252
 192:	85 bb       	out	0x15, r24	; 21
 194:	aa 9a       	sbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 196:	85 e0       	ldi	r24, 0x05	; 5
 198:	8a 95       	dec	r24
 19a:	f1 f7       	brne	.-4      	; 0x198 <LCD_Command+0xc>
 19c:	00 00       	nop
 19e:	aa 98       	cbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1a0:	8f ed       	ldi	r24, 0xDF	; 223
 1a2:	9e e2       	ldi	r25, 0x2E	; 46
 1a4:	01 97       	sbiw	r24, 0x01	; 1
 1a6:	f1 f7       	brne	.-4      	; 0x1a4 <LCD_Command+0x18>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <LCD_Command+0x1e>
 1aa:	00 00       	nop
 1ac:	08 95       	ret

000001ae <LCD_Char>:
 1ae:	88 bb       	out	0x18, r24	; 24
 1b0:	a9 98       	cbi	0x15, 1	; 21
 1b2:	85 b3       	in	r24, 0x15	; 21
 1b4:	85 60       	ori	r24, 0x05	; 5
 1b6:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b8:	85 e0       	ldi	r24, 0x05	; 5
 1ba:	8a 95       	dec	r24
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <LCD_Char+0xc>
 1be:	00 00       	nop
 1c0:	aa 98       	cbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c2:	8f e9       	ldi	r24, 0x9F	; 159
 1c4:	9f e0       	ldi	r25, 0x0F	; 15
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <LCD_Char+0x18>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <LCD_Char+0x1e>
 1cc:	00 00       	nop
 1ce:	08 95       	ret

000001d0 <LCD_Init>:
 1d0:	84 b3       	in	r24, 0x14	; 20
 1d2:	87 60       	ori	r24, 0x07	; 7
 1d4:	84 bb       	out	0x14, r24	; 20
 1d6:	8f ef       	ldi	r24, 0xFF	; 255
 1d8:	87 bb       	out	0x17, r24	; 23
 1da:	2f ef       	ldi	r18, 0xFF	; 255
 1dc:	89 ef       	ldi	r24, 0xF9	; 249
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	21 50       	subi	r18, 0x01	; 1
 1e2:	80 40       	sbci	r24, 0x00	; 0
 1e4:	90 40       	sbci	r25, 0x00	; 0
 1e6:	e1 f7       	brne	.-8      	; 0x1e0 <LCD_Init+0x10>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <LCD_Init+0x1a>
 1ea:	00 00       	nop
 1ec:	88 e3       	ldi	r24, 0x38	; 56
 1ee:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
 1f2:	8c e0       	ldi	r24, 0x0C	; 12
 1f4:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
 1f8:	86 e0       	ldi	r24, 0x06	; 6
 1fa:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
 204:	80 e8       	ldi	r24, 0x80	; 128
 206:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
 20a:	08 95       	ret

0000020c <LCD_String>:
 20c:	cf 93       	push	r28
 20e:	df 93       	push	r29
 210:	ec 01       	movw	r28, r24
 212:	88 81       	ld	r24, Y
 214:	88 23       	and	r24, r24
 216:	31 f0       	breq	.+12     	; 0x224 <LCD_String+0x18>
 218:	21 96       	adiw	r28, 0x01	; 1
 21a:	0e 94 d7 00 	call	0x1ae	; 0x1ae <LCD_Char>
 21e:	89 91       	ld	r24, Y+
 220:	81 11       	cpse	r24, r1
 222:	fb cf       	rjmp	.-10     	; 0x21a <LCD_String+0xe>
 224:	df 91       	pop	r29
 226:	cf 91       	pop	r28
 228:	08 95       	ret

0000022a <LCD_String_xy>:
 22a:	cf 93       	push	r28
 22c:	df 93       	push	r29
 22e:	ea 01       	movw	r28, r20
 230:	81 30       	cpi	r24, 0x01	; 1
 232:	31 f4       	brne	.+12     	; 0x240 <LCD_String_xy+0x16>
 234:	86 2f       	mov	r24, r22
 236:	8f 70       	andi	r24, 0x0F	; 15
 238:	80 68       	ori	r24, 0x80	; 128
 23a:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
 23e:	07 c0       	rjmp	.+14     	; 0x24e <LCD_String_xy+0x24>
 240:	82 30       	cpi	r24, 0x02	; 2
 242:	29 f4       	brne	.+10     	; 0x24e <LCD_String_xy+0x24>
 244:	86 2f       	mov	r24, r22
 246:	8f 70       	andi	r24, 0x0F	; 15
 248:	80 6c       	ori	r24, 0xC0	; 192
 24a:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
 24e:	ce 01       	movw	r24, r28
 250:	0e 94 06 01 	call	0x20c	; 0x20c <LCD_String>
 254:	df 91       	pop	r29
 256:	cf 91       	pop	r28
 258:	08 95       	ret

0000025a <__vector_9>:
#define stepper4 PC3 //Define PC3 as stepper motor controller pin 4B

int TimerOverflow = 0;

ISR(TIMER1_OVF_vect)
{
 25a:	1f 92       	push	r1
 25c:	0f 92       	push	r0
 25e:	0f b6       	in	r0, 0x3f	; 63
 260:	0f 92       	push	r0
 262:	11 24       	eor	r1, r1
 264:	8f 93       	push	r24
 266:	9f 93       	push	r25
	TimerOverflow++;		/* Increment Timer Overflow count */
 268:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__data_end>
 26c:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <__data_end+0x1>
 270:	01 96       	adiw	r24, 0x01	; 1
 272:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__data_end+0x1>
 276:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__data_end>
}
 27a:	9f 91       	pop	r25
 27c:	8f 91       	pop	r24
 27e:	0f 90       	pop	r0
 280:	0f be       	out	0x3f, r0	; 63
 282:	0f 90       	pop	r0
 284:	1f 90       	pop	r1
 286:	18 95       	reti

00000288 <ADC_Init>:

void ADC_Init()
{
	DDRA=0x0;			/* Make ADC port as input */
 288:	1a ba       	out	0x1a, r1	; 26
	ADCSRA = 0x87;			/* Enable ADC, fr/128  */
 28a:	87 e8       	ldi	r24, 0x87	; 135
 28c:	86 b9       	out	0x06, r24	; 6
	ADMUX = 0x47;			/* Vref: Avcc, ADC channel: 7 */
 28e:	87 e4       	ldi	r24, 0x47	; 71
 290:	87 b9       	out	0x07, r24	; 7
 292:	08 95       	ret

00000294 <ADC_Read>:

int ADC_Read(char channel)
{
	int Ain,AinLow;
	
	ADMUX=ADMUX|(channel & 0x0f);	/* Set input channel to read */
 294:	97 b1       	in	r25, 0x07	; 7
 296:	8f 70       	andi	r24, 0x0F	; 15
 298:	98 2b       	or	r25, r24
 29a:	97 b9       	out	0x07, r25	; 7

	ADCSRA |= (1<<ADSC);		/* Start conversion */
 29c:	36 9a       	sbi	0x06, 6	; 6
	while((ADCSRA&(1<<ADIF))==0);	/* Monitor end of conversion interrupt */
 29e:	34 9b       	sbis	0x06, 4	; 6
 2a0:	fe cf       	rjmp	.-4      	; 0x29e <ADC_Read+0xa>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2a2:	85 e3       	ldi	r24, 0x35	; 53
 2a4:	8a 95       	dec	r24
 2a6:	f1 f7       	brne	.-4      	; 0x2a4 <ADC_Read+0x10>
 2a8:	00 00       	nop
	
	_delay_us(10);
	AinLow = (int)ADCL;		/* Read lower byte*/
 2aa:	24 b1       	in	r18, 0x04	; 4
	Ain = (int)ADCH*256;		/* Read higher 2 bits and 
 2ac:	85 b1       	in	r24, 0x05	; 5
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	98 2f       	mov	r25, r24
 2b2:	88 27       	eor	r24, r24
					Multiply with weight */
	Ain = Ain + AinLow;				
	return(Ain);			/* Return digital value*/
}
 2b4:	82 0f       	add	r24, r18
 2b6:	91 1d       	adc	r25, r1
 2b8:	08 95       	ret

000002ba <beep_the_buzzer>:
int beep_the_buzzer ()
{
	PORTD|= (1<<PD5);	//PIND5 turned HIGH, to start beeping of buzzer
 2ba:	95 9a       	sbi	0x12, 5	; 18
	
}
 2bc:	08 95       	ret

000002be <stop_the_buzzer>:


int stop_the_buzzer ()
{
	PORTD&=~ (1<<PD5);	//PIND5 turned LOW, to stop beeping of buzze
 2be:	95 98       	cbi	0x12, 5	; 18
}
 2c0:	08 95       	ret

000002c2 <main>:

int main(void)
{
 2c2:	cf 93       	push	r28
 2c4:	df 93       	push	r29
 2c6:	cd b7       	in	r28, 0x3d	; 61
 2c8:	de b7       	in	r29, 0x3e	; 62
 2ca:	2a 97       	sbiw	r28, 0x0a	; 10
 2cc:	0f b6       	in	r0, 0x3f	; 63
 2ce:	f8 94       	cli
 2d0:	de bf       	out	0x3e, r29	; 62
 2d2:	0f be       	out	0x3f, r0	; 63
 2d4:	cd bf       	out	0x3d, r28	; 61
	double distance;
	int period;
	period = 100;		/* Set period in between two steps */
	
	
	DDRC =DDRC | (1 << MO1_I1)| (1 << MO1_I2)| (1 << MO2_I1)| (1 << MO2_I2); // MOTOR
 2d6:	84 b3       	in	r24, 0x14	; 20
 2d8:	80 6f       	ori	r24, 0xF0	; 240
 2da:	84 bb       	out	0x14, r24	; 20
	DDRA = 0x01;			/* Make trigger pin as output */
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	8a bb       	out	0x1a, r24	; 26
	PORTD = 0xFF;			/* Turn on Pull-up */
 2e0:	8f ef       	ldi	r24, 0xFF	; 255
 2e2:	82 bb       	out	0x12, r24	; 18
	DDRD =DDRD| 0x0F;		/* Make PORTD lower pins as output */
 2e4:	81 b3       	in	r24, 0x11	; 17
 2e6:	8f 60       	ori	r24, 0x0F	; 15
 2e8:	81 bb       	out	0x11, r24	; 17
	DDRD |= (1<<PD5);       //Make PD5 ad output pin
 2ea:	8d 9a       	sbi	0x11, 5	; 17

	
	LCD_Init();
 2ec:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Init>
	LCD_String_xy(1, 0, "Ultrasonic");
 2f0:	40 e6       	ldi	r20, 0x60	; 96
 2f2:	50 e0       	ldi	r21, 0x00	; 0
 2f4:	60 e0       	ldi	r22, 0x00	; 0
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	0e 94 15 01 	call	0x22a	; 0x22a <LCD_String_xy>
	
	sei();					/* Enable global interrupt */
 2fc:	78 94       	sei
	TIMSK = (1 << TOIE1);	/* Enable Timer1 overflow interrupts */
 2fe:	84 e0       	ldi	r24, 0x04	; 4
 300:	89 bf       	out	0x39, r24	; 57
	TCCR1A = 0;				/* Set all bit to zero Normal operation */
 302:	1f bc       	out	0x2f, r1	; 47
	
	ADC_Init();		/* initialize the ADC */
 304:	0e 94 44 01 	call	0x288	; 0x288 <ADC_Init>
		PORTA |= (1 << Trigger_pin);/* Give 10us trigger pulse on trig. pin to HC-SR04 */
		_delay_us(10);
		PORTA &= (~(1 << Trigger_pin));
		
		TCNT1 = 0;			/* Clear Timer counter */
		TCCR1B = 0x41;		/* Setting for capture rising edge, No pre-scaler*/
 308:	0f 2e       	mov	r0, r31
 30a:	f1 e4       	ldi	r31, 0x41	; 65
 30c:	af 2e       	mov	r10, r31
 30e:	f0 2d       	mov	r31, r0
		TIFR = 1<<ICF1;		/* Clear ICP flag (Input Capture flag) */
 310:	68 94       	set
 312:	cc 24       	eor	r12, r12
 314:	c5 f8       	bld	r12, 5
		TIFR = 1<<TOV1;		/* Clear Timer Overflow flag */
 316:	68 94       	set
 318:	dd 24       	eor	r13, r13
 31a:	d2 f8       	bld	r13, 2

		/*Calculate width of Echo by Input Capture (ICP) on PortD PD6 */
		
		while ((TIFR & (1 << ICF1)) == 0);	/* Wait for rising edge */
		TCNT1 = 0;			/* Clear Timer counter */
		TCCR1B = 0x01;		/* Setting for capture falling edge, No pre-scaler */
 31c:	bb 24       	eor	r11, r11
 31e:	b3 94       	inc	r11

			_delay_ms(3000);    //delay of 3 sec
			
		}

		dtostrf(distance, 2, 2, string);/* Convert distance into string */
 320:	ce 01       	movw	r24, r28
 322:	01 96       	adiw	r24, 0x01	; 1
 324:	7c 01       	movw	r14, r24


	while(1)
	{

		PORTA |= (1 << Trigger_pin);/* Give 10us trigger pulse on trig. pin to HC-SR04 */
 326:	d8 9a       	sbi	0x1b, 0	; 27
 328:	95 e3       	ldi	r25, 0x35	; 53
 32a:	9a 95       	dec	r25
 32c:	f1 f7       	brne	.-4      	; 0x32a <main+0x68>
 32e:	00 00       	nop
		_delay_us(10);
		PORTA &= (~(1 << Trigger_pin));
 330:	d8 98       	cbi	0x1b, 0	; 27
		
		TCNT1 = 0;			/* Clear Timer counter */
 332:	1d bc       	out	0x2d, r1	; 45
 334:	1c bc       	out	0x2c, r1	; 44
		TCCR1B = 0x41;		/* Setting for capture rising edge, No pre-scaler*/
 336:	ae bc       	out	0x2e, r10	; 46
		TIFR = 1<<ICF1;		/* Clear ICP flag (Input Capture flag) */
 338:	c8 be       	out	0x38, r12	; 56
		TIFR = 1<<TOV1;		/* Clear Timer Overflow flag */
 33a:	d8 be       	out	0x38, r13	; 56

		/*Calculate width of Echo by Input Capture (ICP) on PortD PD6 */
		
		while ((TIFR & (1 << ICF1)) == 0);	/* Wait for rising edge */
 33c:	08 b6       	in	r0, 0x38	; 56
 33e:	05 fe       	sbrs	r0, 5
 340:	fd cf       	rjmp	.-6      	; 0x33c <main+0x7a>
		TCNT1 = 0;			/* Clear Timer counter */
 342:	1d bc       	out	0x2d, r1	; 45
 344:	1c bc       	out	0x2c, r1	; 44
		TCCR1B = 0x01;		/* Setting for capture falling edge, No pre-scaler */
 346:	be bc       	out	0x2e, r11	; 46
		TIFR = 1<<ICF1;		/* Clear ICP flag (Input Capture flag) */
 348:	c8 be       	out	0x38, r12	; 56
		TIFR = 1<<TOV1;		/* Clear Timer Overflow flag */
 34a:	d8 be       	out	0x38, r13	; 56
		TimerOverflow = 0;	/* Clear Timer overflow count */
 34c:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__data_end+0x1>
 350:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__data_end>

		while ((TIFR & (1 << ICF1)) == 0); /* Wait for falling edge */
 354:	08 b6       	in	r0, 0x38	; 56
 356:	05 fe       	sbrs	r0, 5
 358:	fd cf       	rjmp	.-6      	; 0x354 <main+0x92>
		count = ICR1 + (65535 * TimerOverflow);	/* Take value of capture register */
 35a:	66 b5       	in	r22, 0x26	; 38
 35c:	77 b5       	in	r23, 0x27	; 39
		/* 8MHz Timer freq, sound speed =343 m/s, calculation mentioned in doc. */
		distance = (double)count / (466.47);
 35e:	80 e0       	ldi	r24, 0x00	; 0
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	0e 94 01 04 	call	0x802	; 0x802 <__floatsisf>
 366:	29 e2       	ldi	r18, 0x29	; 41
 368:	3c e3       	ldi	r19, 0x3C	; 60
 36a:	49 ee       	ldi	r20, 0xE9	; 233
 36c:	53 e4       	ldi	r21, 0x43	; 67
 36e:	0e 94 8d 03 	call	0x71a	; 0x71a <__divsf3>
 372:	2b 01       	movw	r4, r22
 374:	3c 01       	movw	r6, r24
		//distance = (double)count / 100; // 5280, 5440
		
		if (distance > 20){
 376:	20 e0       	ldi	r18, 0x00	; 0
 378:	30 e0       	ldi	r19, 0x00	; 0
 37a:	40 ea       	ldi	r20, 0xA0	; 160
 37c:	51 e4       	ldi	r21, 0x41	; 65
 37e:	0e 94 b1 04 	call	0x962	; 0x962 <__gesf2>
 382:	18 16       	cp	r1, r24
 384:	24 f4       	brge	.+8      	; 0x38e <main+0xcc>
			PORTC = PORTC |(1 << MO1_I2)|(1 << MO2_I2); // motor rotation in clockwise direction
 386:	85 b3       	in	r24, 0x15	; 21
 388:	80 66       	ori	r24, 0x60	; 96
 38a:	85 bb       	out	0x15, r24	; 21
 38c:	25 c0       	rjmp	.+74     	; 0x3d8 <main+0x116>
			
			
		}
		
		else {
			PORTC =PORTC & ~(1 << MO1_I2) & ~(1 << MO1_I2);
 38e:	ad 98       	cbi	0x15, 5	; 21
			PORTC = PORTC |(1 << MO1_I1)|(1 << MO2_I1); //motor rotation in anticlockwise direction
 390:	85 b3       	in	r24, 0x15	; 21
 392:	80 69       	ori	r24, 0x90	; 144
 394:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 396:	2f ef       	ldi	r18, 0xFF	; 255
 398:	4b e7       	ldi	r20, 0x7B	; 123
 39a:	82 e9       	ldi	r24, 0x92	; 146
 39c:	21 50       	subi	r18, 0x01	; 1
 39e:	40 40       	sbci	r20, 0x00	; 0
 3a0:	80 40       	sbci	r24, 0x00	; 0
 3a2:	e1 f7       	brne	.-8      	; 0x39c <main+0xda>
 3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <main+0xe4>
 3a6:	00 00       	nop

			_delay_ms(3000);    //delay of 3 sec
			PORTC =PORTC & ~(1 << MO1_I1) & ~(1 << MO2_I1);
 3a8:	85 b3       	in	r24, 0x15	; 21
 3aa:	8f 76       	andi	r24, 0x6F	; 111
 3ac:	85 bb       	out	0x15, r24	; 21
 3ae:	9f ef       	ldi	r25, 0xFF	; 255
 3b0:	23 ed       	ldi	r18, 0xD3	; 211
 3b2:	40 e3       	ldi	r20, 0x30	; 48
 3b4:	91 50       	subi	r25, 0x01	; 1
 3b6:	20 40       	sbci	r18, 0x00	; 0
 3b8:	40 40       	sbci	r20, 0x00	; 0
 3ba:	e1 f7       	brne	.-8      	; 0x3b4 <main+0xf2>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <main+0xfc>
 3be:	00 00       	nop

			_delay_ms(1000);    //delay of 1 sec
			
			PORTC = PORTC |(1 << MO1_I1)|(1 << MO2_I2); //motor rotation FOR ROTATE;
 3c0:	85 b3       	in	r24, 0x15	; 21
 3c2:	80 65       	ori	r24, 0x50	; 80
 3c4:	85 bb       	out	0x15, r24	; 21
 3c6:	8f ef       	ldi	r24, 0xFF	; 255
 3c8:	9b e7       	ldi	r25, 0x7B	; 123
 3ca:	22 e9       	ldi	r18, 0x92	; 146
 3cc:	81 50       	subi	r24, 0x01	; 1
 3ce:	90 40       	sbci	r25, 0x00	; 0
 3d0:	20 40       	sbci	r18, 0x00	; 0
 3d2:	e1 f7       	brne	.-8      	; 0x3cc <main+0x10a>
 3d4:	00 c0       	rjmp	.+0      	; 0x3d6 <main+0x114>
 3d6:	00 00       	nop

			_delay_ms(3000);    //delay of 3 sec
			
		}

		dtostrf(distance, 2, 2, string);/* Convert distance into string */
 3d8:	87 01       	movw	r16, r14
 3da:	22 e0       	ldi	r18, 0x02	; 2
 3dc:	42 e0       	ldi	r20, 0x02	; 2
 3de:	c3 01       	movw	r24, r6
 3e0:	b2 01       	movw	r22, r4
 3e2:	0e 94 23 05 	call	0xa46	; 0xa46 <dtostrf>
		strcat(string, " cm   ");
 3e6:	d7 01       	movw	r26, r14
 3e8:	0d 90       	ld	r0, X+
 3ea:	00 20       	and	r0, r0
 3ec:	e9 f7       	brne	.-6      	; 0x3e8 <main+0x126>
 3ee:	11 97       	sbiw	r26, 0x01	; 1
 3f0:	87 e0       	ldi	r24, 0x07	; 7
 3f2:	eb e6       	ldi	r30, 0x6B	; 107
 3f4:	f0 e0       	ldi	r31, 0x00	; 0
 3f6:	01 90       	ld	r0, Z+
 3f8:	0d 92       	st	X+, r0
 3fa:	8a 95       	dec	r24
 3fc:	e1 f7       	brne	.-8      	; 0x3f6 <main+0x134>
		LCD_String_xy(2, 0, "Dist = ");
 3fe:	42 e7       	ldi	r20, 0x72	; 114
 400:	50 e0       	ldi	r21, 0x00	; 0
 402:	60 e0       	ldi	r22, 0x00	; 0
 404:	82 e0       	ldi	r24, 0x02	; 2
 406:	0e 94 15 01 	call	0x22a	; 0x22a <LCD_String_xy>
		LCD_String_xy(2, 7, string);	/* Print distance on LDC16x2 */
 40a:	a7 01       	movw	r20, r14
 40c:	67 e0       	ldi	r22, 0x07	; 7
 40e:	82 e0       	ldi	r24, 0x02	; 2
 410:	0e 94 15 01 	call	0x22a	; 0x22a <LCD_String_xy>
 414:	4f ef       	ldi	r20, 0xFF	; 255
 416:	83 ec       	ldi	r24, 0xC3	; 195
 418:	99 e0       	ldi	r25, 0x09	; 9
 41a:	41 50       	subi	r20, 0x01	; 1
 41c:	80 40       	sbci	r24, 0x00	; 0
 41e:	90 40       	sbci	r25, 0x00	; 0
 420:	e1 f7       	brne	.-8      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 422:	00 c0       	rjmp	.+0      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 424:	00 00       	nop
 426:	2c e0       	ldi	r18, 0x0C	; 12
 428:	30 e0       	ldi	r19, 0x00	; 0
		_delay_ms(200);
		
		/* Rotate Stepper Motor clockwise with Half step sequence */
		for(int i=0;i<12;i++)
		{
			PORTD = PORTD|0x09;
 42a:	82 b3       	in	r24, 0x12	; 18
 42c:	89 60       	ori	r24, 0x09	; 9
 42e:	82 bb       	out	0x12, r24	; 18
 430:	4f ef       	ldi	r20, 0xFF	; 255
 432:	81 ee       	ldi	r24, 0xE1	; 225
 434:	94 e0       	ldi	r25, 0x04	; 4
 436:	41 50       	subi	r20, 0x01	; 1
 438:	80 40       	sbci	r24, 0x00	; 0
 43a:	90 40       	sbci	r25, 0x00	; 0
 43c:	e1 f7       	brne	.-8      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 43e:	00 c0       	rjmp	.+0      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 440:	00 00       	nop
			_delay_ms(period);
			PORTD = PORTD &(~(0x09));
 442:	82 b3       	in	r24, 0x12	; 18
 444:	86 7f       	andi	r24, 0xF6	; 246
 446:	82 bb       	out	0x12, r24	; 18
			PORTD = PORTD|0x08;
 448:	93 9a       	sbi	0x12, 3	; 18
 44a:	4f ef       	ldi	r20, 0xFF	; 255
 44c:	81 ee       	ldi	r24, 0xE1	; 225
 44e:	94 e0       	ldi	r25, 0x04	; 4
 450:	41 50       	subi	r20, 0x01	; 1
 452:	80 40       	sbci	r24, 0x00	; 0
 454:	90 40       	sbci	r25, 0x00	; 0
 456:	e1 f7       	brne	.-8      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 458:	00 c0       	rjmp	.+0      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 45a:	00 00       	nop
			_delay_ms(period);
			PORTD = PORTD &(~(0x08));
 45c:	93 98       	cbi	0x12, 3	; 18
			PORTD = PORTD|0x0C;
 45e:	82 b3       	in	r24, 0x12	; 18
 460:	8c 60       	ori	r24, 0x0C	; 12
 462:	82 bb       	out	0x12, r24	; 18
 464:	4f ef       	ldi	r20, 0xFF	; 255
 466:	81 ee       	ldi	r24, 0xE1	; 225
 468:	94 e0       	ldi	r25, 0x04	; 4
 46a:	41 50       	subi	r20, 0x01	; 1
 46c:	80 40       	sbci	r24, 0x00	; 0
 46e:	90 40       	sbci	r25, 0x00	; 0
 470:	e1 f7       	brne	.-8      	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 472:	00 c0       	rjmp	.+0      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 474:	00 00       	nop
			_delay_ms(period);
			PORTD = PORTD &(~(0x0C));
 476:	82 b3       	in	r24, 0x12	; 18
 478:	83 7f       	andi	r24, 0xF3	; 243
 47a:	82 bb       	out	0x12, r24	; 18
			PORTD = PORTD|0x04;
 47c:	92 9a       	sbi	0x12, 2	; 18
 47e:	4f ef       	ldi	r20, 0xFF	; 255
 480:	81 ee       	ldi	r24, 0xE1	; 225
 482:	94 e0       	ldi	r25, 0x04	; 4
 484:	41 50       	subi	r20, 0x01	; 1
 486:	80 40       	sbci	r24, 0x00	; 0
 488:	90 40       	sbci	r25, 0x00	; 0
 48a:	e1 f7       	brne	.-8      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 48c:	00 c0       	rjmp	.+0      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 48e:	00 00       	nop
			_delay_ms(period);
			PORTD = PORTD &(~(0x04));
 490:	92 98       	cbi	0x12, 2	; 18
			PORTD = PORTD|0x06;
 492:	82 b3       	in	r24, 0x12	; 18
 494:	86 60       	ori	r24, 0x06	; 6
 496:	82 bb       	out	0x12, r24	; 18
 498:	4f ef       	ldi	r20, 0xFF	; 255
 49a:	81 ee       	ldi	r24, 0xE1	; 225
 49c:	94 e0       	ldi	r25, 0x04	; 4
 49e:	41 50       	subi	r20, 0x01	; 1
 4a0:	80 40       	sbci	r24, 0x00	; 0
 4a2:	90 40       	sbci	r25, 0x00	; 0
 4a4:	e1 f7       	brne	.-8      	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 4a6:	00 c0       	rjmp	.+0      	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 4a8:	00 00       	nop
			_delay_ms(period);
			PORTD = PORTD &(~(0x06));
 4aa:	82 b3       	in	r24, 0x12	; 18
 4ac:	89 7f       	andi	r24, 0xF9	; 249
 4ae:	82 bb       	out	0x12, r24	; 18
			PORTD = PORTD|0x02;
 4b0:	91 9a       	sbi	0x12, 1	; 18
 4b2:	4f ef       	ldi	r20, 0xFF	; 255
 4b4:	81 ee       	ldi	r24, 0xE1	; 225
 4b6:	94 e0       	ldi	r25, 0x04	; 4
 4b8:	41 50       	subi	r20, 0x01	; 1
 4ba:	80 40       	sbci	r24, 0x00	; 0
 4bc:	90 40       	sbci	r25, 0x00	; 0
 4be:	e1 f7       	brne	.-8      	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 4c0:	00 c0       	rjmp	.+0      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4c2:	00 00       	nop
			_delay_ms(period);
			PORTD = PORTD &(~(0x02));
 4c4:	91 98       	cbi	0x12, 1	; 18
			PORTD = PORTD|0x03;
 4c6:	82 b3       	in	r24, 0x12	; 18
 4c8:	83 60       	ori	r24, 0x03	; 3
 4ca:	82 bb       	out	0x12, r24	; 18
 4cc:	4f ef       	ldi	r20, 0xFF	; 255
 4ce:	81 ee       	ldi	r24, 0xE1	; 225
 4d0:	94 e0       	ldi	r25, 0x04	; 4
 4d2:	41 50       	subi	r20, 0x01	; 1
 4d4:	80 40       	sbci	r24, 0x00	; 0
 4d6:	90 40       	sbci	r25, 0x00	; 0
 4d8:	e1 f7       	brne	.-8      	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4da:	00 c0       	rjmp	.+0      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4dc:	00 00       	nop
			_delay_ms(period);
			PORTD = PORTD &(~(0x03));
 4de:	82 b3       	in	r24, 0x12	; 18
 4e0:	8c 7f       	andi	r24, 0xFC	; 252
 4e2:	82 bb       	out	0x12, r24	; 18
			PORTD = PORTD|0x01;
 4e4:	90 9a       	sbi	0x12, 0	; 18
 4e6:	4f ef       	ldi	r20, 0xFF	; 255
 4e8:	81 ee       	ldi	r24, 0xE1	; 225
 4ea:	94 e0       	ldi	r25, 0x04	; 4
 4ec:	41 50       	subi	r20, 0x01	; 1
 4ee:	80 40       	sbci	r24, 0x00	; 0
 4f0:	90 40       	sbci	r25, 0x00	; 0
 4f2:	e1 f7       	brne	.-8      	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4f4:	00 c0       	rjmp	.+0      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4f6:	00 00       	nop
			_delay_ms(period);
			PORTD = PORTD &(~(0x01));
 4f8:	90 98       	cbi	0x12, 0	; 18
 4fa:	21 50       	subi	r18, 0x01	; 1
 4fc:	31 09       	sbc	r19, r1
		LCD_String_xy(2, 0, "Dist = ");
		LCD_String_xy(2, 7, string);	/* Print distance on LDC16x2 */
		_delay_ms(200);
		
		/* Rotate Stepper Motor clockwise with Half step sequence */
		for(int i=0;i<12;i++)
 4fe:	09 f0       	breq	.+2      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 500:	94 cf       	rjmp	.-216    	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
			PORTD = PORTD|0x01;
			_delay_ms(period);
			PORTD = PORTD &(~(0x01));
			
		}
		PORTD =PORTD | 0x09;		/* Last step to initial position */
 502:	82 b3       	in	r24, 0x12	; 18
 504:	89 60       	ori	r24, 0x09	; 9
 506:	82 bb       	out	0x12, r24	; 18
 508:	2f ef       	ldi	r18, 0xFF	; 255
 50a:	41 ee       	ldi	r20, 0xE1	; 225
 50c:	84 e0       	ldi	r24, 0x04	; 4
 50e:	21 50       	subi	r18, 0x01	; 1
 510:	40 40       	sbci	r20, 0x00	; 0
 512:	80 40       	sbci	r24, 0x00	; 0
 514:	e1 f7       	brne	.-8      	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 516:	00 c0       	rjmp	.+0      	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 518:	00 00       	nop
 51a:	9f ef       	ldi	r25, 0xFF	; 255
 51c:	23 ed       	ldi	r18, 0xD3	; 211
 51e:	40 e3       	ldi	r20, 0x30	; 48
 520:	91 50       	subi	r25, 0x01	; 1
 522:	20 40       	sbci	r18, 0x00	; 0
 524:	40 40       	sbci	r20, 0x00	; 0
 526:	e1 f7       	brne	.-8      	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 528:	00 c0       	rjmp	.+0      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 52a:	00 00       	nop
 52c:	2c e0       	ldi	r18, 0x0C	; 12
 52e:	30 e0       	ldi	r19, 0x00	; 0
		_delay_ms(1000);

		/* Rotate Stepper Motor Anticlockwise with Full step sequence */
		for(int i=0;i<12;i++)
		{
			PORTD = PORTD|0x09;
 530:	82 b3       	in	r24, 0x12	; 18
 532:	89 60       	ori	r24, 0x09	; 9
 534:	82 bb       	out	0x12, r24	; 18
 536:	8f ef       	ldi	r24, 0xFF	; 255
 538:	91 ee       	ldi	r25, 0xE1	; 225
 53a:	44 e0       	ldi	r20, 0x04	; 4
 53c:	81 50       	subi	r24, 0x01	; 1
 53e:	90 40       	sbci	r25, 0x00	; 0
 540:	40 40       	sbci	r20, 0x00	; 0
 542:	e1 f7       	brne	.-8      	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 544:	00 c0       	rjmp	.+0      	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 546:	00 00       	nop
			_delay_ms(period);
			PORTD = PORTD &(~(0x09));
 548:	82 b3       	in	r24, 0x12	; 18
 54a:	86 7f       	andi	r24, 0xF6	; 246
 54c:	82 bb       	out	0x12, r24	; 18
			PORTD = PORTD|0x03;
 54e:	82 b3       	in	r24, 0x12	; 18
 550:	83 60       	ori	r24, 0x03	; 3
 552:	82 bb       	out	0x12, r24	; 18
 554:	8f ef       	ldi	r24, 0xFF	; 255
 556:	91 ee       	ldi	r25, 0xE1	; 225
 558:	44 e0       	ldi	r20, 0x04	; 4
 55a:	81 50       	subi	r24, 0x01	; 1
 55c:	90 40       	sbci	r25, 0x00	; 0
 55e:	40 40       	sbci	r20, 0x00	; 0
 560:	e1 f7       	brne	.-8      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 562:	00 c0       	rjmp	.+0      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 564:	00 00       	nop
			_delay_ms(period);
			PORTD = PORTD &(~(0x03));
 566:	82 b3       	in	r24, 0x12	; 18
 568:	8c 7f       	andi	r24, 0xFC	; 252
 56a:	82 bb       	out	0x12, r24	; 18
			PORTD = PORTD|0x06;
 56c:	82 b3       	in	r24, 0x12	; 18
 56e:	86 60       	ori	r24, 0x06	; 6
 570:	82 bb       	out	0x12, r24	; 18
 572:	8f ef       	ldi	r24, 0xFF	; 255
 574:	91 ee       	ldi	r25, 0xE1	; 225
 576:	44 e0       	ldi	r20, 0x04	; 4
 578:	81 50       	subi	r24, 0x01	; 1
 57a:	90 40       	sbci	r25, 0x00	; 0
 57c:	40 40       	sbci	r20, 0x00	; 0
 57e:	e1 f7       	brne	.-8      	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 580:	00 c0       	rjmp	.+0      	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 582:	00 00       	nop
			_delay_ms(period);
			PORTD = PORTD &(~(0x06));
 584:	82 b3       	in	r24, 0x12	; 18
 586:	89 7f       	andi	r24, 0xF9	; 249
 588:	82 bb       	out	0x12, r24	; 18
			PORTD = PORTD|0x0C;
 58a:	82 b3       	in	r24, 0x12	; 18
 58c:	8c 60       	ori	r24, 0x0C	; 12
 58e:	82 bb       	out	0x12, r24	; 18
 590:	8f ef       	ldi	r24, 0xFF	; 255
 592:	91 ee       	ldi	r25, 0xE1	; 225
 594:	44 e0       	ldi	r20, 0x04	; 4
 596:	81 50       	subi	r24, 0x01	; 1
 598:	90 40       	sbci	r25, 0x00	; 0
 59a:	40 40       	sbci	r20, 0x00	; 0
 59c:	e1 f7       	brne	.-8      	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 59e:	00 c0       	rjmp	.+0      	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 5a0:	00 00       	nop
			_delay_ms(period);
			PORTD = PORTD &(~(0x0C));
 5a2:	82 b3       	in	r24, 0x12	; 18
 5a4:	83 7f       	andi	r24, 0xF3	; 243
 5a6:	82 bb       	out	0x12, r24	; 18
 5a8:	21 50       	subi	r18, 0x01	; 1
 5aa:	31 09       	sbc	r19, r1
		PORTD =PORTD | 0x09;		/* Last step to initial position */
		_delay_ms(period);
		_delay_ms(1000);

		/* Rotate Stepper Motor Anticlockwise with Full step sequence */
		for(int i=0;i<12;i++)
 5ac:	09 f0       	breq	.+2      	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5ae:	c0 cf       	rjmp	.-128    	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
			PORTD = PORTD &(~(0x06));
			PORTD = PORTD|0x0C;
			_delay_ms(period);
			PORTD = PORTD &(~(0x0C));
		}
		PORTD = PORTD|0x09;
 5b0:	82 b3       	in	r24, 0x12	; 18
 5b2:	89 60       	ori	r24, 0x09	; 9
 5b4:	82 bb       	out	0x12, r24	; 18
 5b6:	8f ef       	ldi	r24, 0xFF	; 255
 5b8:	91 ee       	ldi	r25, 0xE1	; 225
 5ba:	24 e0       	ldi	r18, 0x04	; 4
 5bc:	81 50       	subi	r24, 0x01	; 1
 5be:	90 40       	sbci	r25, 0x00	; 0
 5c0:	20 40       	sbci	r18, 0x00	; 0
 5c2:	e1 f7       	brne	.-8      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5c4:	00 c0       	rjmp	.+0      	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5c6:	00 00       	nop
		_delay_ms(period);
		PORTD = PORTD &(~(0x09));
 5c8:	82 b3       	in	r24, 0x12	; 18
 5ca:	86 7f       	andi	r24, 0xF6	; 246
 5cc:	82 bb       	out	0x12, r24	; 18
 5ce:	4f ef       	ldi	r20, 0xFF	; 255
 5d0:	83 ed       	ldi	r24, 0xD3	; 211
 5d2:	90 e3       	ldi	r25, 0x30	; 48
 5d4:	41 50       	subi	r20, 0x01	; 1
 5d6:	80 40       	sbci	r24, 0x00	; 0
 5d8:	90 40       	sbci	r25, 0x00	; 0
 5da:	e1 f7       	brne	.-8      	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5dc:	00 c0       	rjmp	.+0      	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5de:	00 00       	nop
		_delay_ms(1000);
		
		
		adc_value = ADC_Read(7);	/* Copy the ADC value */
 5e0:	87 e0       	ldi	r24, 0x07	; 7
 5e2:	0e 94 4a 01 	call	0x294	; 0x294 <ADC_Read>
		WaterLevel = 100-(adc_value*100.00)/1023.00; /* Calculate waterlevel in % */
		
		if ( WaterLevel < 20.0){
 5e6:	bc 01       	movw	r22, r24
 5e8:	99 0f       	add	r25, r25
 5ea:	88 0b       	sbc	r24, r24
 5ec:	99 0b       	sbc	r25, r25
 5ee:	0e 94 01 04 	call	0x802	; 0x802 <__floatsisf>
 5f2:	20 e0       	ldi	r18, 0x00	; 0
 5f4:	30 e0       	ldi	r19, 0x00	; 0
 5f6:	48 ec       	ldi	r20, 0xC8	; 200
 5f8:	52 e4       	ldi	r21, 0x42	; 66
 5fa:	0e 94 b6 04 	call	0x96c	; 0x96c <__mulsf3>
 5fe:	20 e0       	ldi	r18, 0x00	; 0
 600:	30 ec       	ldi	r19, 0xC0	; 192
 602:	4f e7       	ldi	r20, 0x7F	; 127
 604:	54 e4       	ldi	r21, 0x44	; 68
 606:	0e 94 8d 03 	call	0x71a	; 0x71a <__divsf3>
 60a:	9b 01       	movw	r18, r22
 60c:	ac 01       	movw	r20, r24
 60e:	60 e0       	ldi	r22, 0x00	; 0
 610:	70 e0       	ldi	r23, 0x00	; 0
 612:	88 ec       	ldi	r24, 0xC8	; 200
 614:	92 e4       	ldi	r25, 0x42	; 66
 616:	0e 94 1b 03 	call	0x636	; 0x636 <__subsf3>
 61a:	20 e0       	ldi	r18, 0x00	; 0
 61c:	30 e0       	ldi	r19, 0x00	; 0
 61e:	40 ea       	ldi	r20, 0xA0	; 160
 620:	51 e4       	ldi	r21, 0x41	; 65
 622:	0e 94 88 03 	call	0x710	; 0x710 <__cmpsf2>
 626:	88 23       	and	r24, r24
 628:	1c f4       	brge	.+6      	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
			beep_the_buzzer ();
 62a:	0e 94 5d 01 	call	0x2ba	; 0x2ba <beep_the_buzzer>
 62e:	7b ce       	rjmp	.-778    	; 0x326 <main+0x64>
		}
		else
		{
			stop_the_buzzer();
 630:	0e 94 5f 01 	call	0x2be	; 0x2be <stop_the_buzzer>
 634:	78 ce       	rjmp	.-784    	; 0x326 <main+0x64>

00000636 <__subsf3>:
 636:	50 58       	subi	r21, 0x80	; 128

00000638 <__addsf3>:
 638:	bb 27       	eor	r27, r27
 63a:	aa 27       	eor	r26, r26
 63c:	0e 94 33 03 	call	0x666	; 0x666 <__addsf3x>
 640:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_round>
 644:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__fp_pscA>
 648:	38 f0       	brcs	.+14     	; 0x658 <__addsf3+0x20>
 64a:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__fp_pscB>
 64e:	20 f0       	brcs	.+8      	; 0x658 <__addsf3+0x20>
 650:	39 f4       	brne	.+14     	; 0x660 <__addsf3+0x28>
 652:	9f 3f       	cpi	r25, 0xFF	; 255
 654:	19 f4       	brne	.+6      	; 0x65c <__addsf3+0x24>
 656:	26 f4       	brtc	.+8      	; 0x660 <__addsf3+0x28>
 658:	0c 94 66 04 	jmp	0x8cc	; 0x8cc <__fp_nan>
 65c:	0e f4       	brtc	.+2      	; 0x660 <__addsf3+0x28>
 65e:	e0 95       	com	r30
 660:	e7 fb       	bst	r30, 7
 662:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__fp_inf>

00000666 <__addsf3x>:
 666:	e9 2f       	mov	r30, r25
 668:	0e 94 88 04 	call	0x910	; 0x910 <__fp_split3>
 66c:	58 f3       	brcs	.-42     	; 0x644 <__addsf3+0xc>
 66e:	ba 17       	cp	r27, r26
 670:	62 07       	cpc	r22, r18
 672:	73 07       	cpc	r23, r19
 674:	84 07       	cpc	r24, r20
 676:	95 07       	cpc	r25, r21
 678:	20 f0       	brcs	.+8      	; 0x682 <__addsf3x+0x1c>
 67a:	79 f4       	brne	.+30     	; 0x69a <__addsf3x+0x34>
 67c:	a6 f5       	brtc	.+104    	; 0x6e6 <__addsf3x+0x80>
 67e:	0c 94 aa 04 	jmp	0x954	; 0x954 <__fp_zero>
 682:	0e f4       	brtc	.+2      	; 0x686 <__addsf3x+0x20>
 684:	e0 95       	com	r30
 686:	0b 2e       	mov	r0, r27
 688:	ba 2f       	mov	r27, r26
 68a:	a0 2d       	mov	r26, r0
 68c:	0b 01       	movw	r0, r22
 68e:	b9 01       	movw	r22, r18
 690:	90 01       	movw	r18, r0
 692:	0c 01       	movw	r0, r24
 694:	ca 01       	movw	r24, r20
 696:	a0 01       	movw	r20, r0
 698:	11 24       	eor	r1, r1
 69a:	ff 27       	eor	r31, r31
 69c:	59 1b       	sub	r21, r25
 69e:	99 f0       	breq	.+38     	; 0x6c6 <__addsf3x+0x60>
 6a0:	59 3f       	cpi	r21, 0xF9	; 249
 6a2:	50 f4       	brcc	.+20     	; 0x6b8 <__addsf3x+0x52>
 6a4:	50 3e       	cpi	r21, 0xE0	; 224
 6a6:	68 f1       	brcs	.+90     	; 0x702 <__addsf3x+0x9c>
 6a8:	1a 16       	cp	r1, r26
 6aa:	f0 40       	sbci	r31, 0x00	; 0
 6ac:	a2 2f       	mov	r26, r18
 6ae:	23 2f       	mov	r18, r19
 6b0:	34 2f       	mov	r19, r20
 6b2:	44 27       	eor	r20, r20
 6b4:	58 5f       	subi	r21, 0xF8	; 248
 6b6:	f3 cf       	rjmp	.-26     	; 0x69e <__addsf3x+0x38>
 6b8:	46 95       	lsr	r20
 6ba:	37 95       	ror	r19
 6bc:	27 95       	ror	r18
 6be:	a7 95       	ror	r26
 6c0:	f0 40       	sbci	r31, 0x00	; 0
 6c2:	53 95       	inc	r21
 6c4:	c9 f7       	brne	.-14     	; 0x6b8 <__addsf3x+0x52>
 6c6:	7e f4       	brtc	.+30     	; 0x6e6 <__addsf3x+0x80>
 6c8:	1f 16       	cp	r1, r31
 6ca:	ba 0b       	sbc	r27, r26
 6cc:	62 0b       	sbc	r22, r18
 6ce:	73 0b       	sbc	r23, r19
 6d0:	84 0b       	sbc	r24, r20
 6d2:	ba f0       	brmi	.+46     	; 0x702 <__addsf3x+0x9c>
 6d4:	91 50       	subi	r25, 0x01	; 1
 6d6:	a1 f0       	breq	.+40     	; 0x700 <__addsf3x+0x9a>
 6d8:	ff 0f       	add	r31, r31
 6da:	bb 1f       	adc	r27, r27
 6dc:	66 1f       	adc	r22, r22
 6de:	77 1f       	adc	r23, r23
 6e0:	88 1f       	adc	r24, r24
 6e2:	c2 f7       	brpl	.-16     	; 0x6d4 <__addsf3x+0x6e>
 6e4:	0e c0       	rjmp	.+28     	; 0x702 <__addsf3x+0x9c>
 6e6:	ba 0f       	add	r27, r26
 6e8:	62 1f       	adc	r22, r18
 6ea:	73 1f       	adc	r23, r19
 6ec:	84 1f       	adc	r24, r20
 6ee:	48 f4       	brcc	.+18     	; 0x702 <__addsf3x+0x9c>
 6f0:	87 95       	ror	r24
 6f2:	77 95       	ror	r23
 6f4:	67 95       	ror	r22
 6f6:	b7 95       	ror	r27
 6f8:	f7 95       	ror	r31
 6fa:	9e 3f       	cpi	r25, 0xFE	; 254
 6fc:	08 f0       	brcs	.+2      	; 0x700 <__addsf3x+0x9a>
 6fe:	b0 cf       	rjmp	.-160    	; 0x660 <__addsf3+0x28>
 700:	93 95       	inc	r25
 702:	88 0f       	add	r24, r24
 704:	08 f0       	brcs	.+2      	; 0x708 <__addsf3x+0xa2>
 706:	99 27       	eor	r25, r25
 708:	ee 0f       	add	r30, r30
 70a:	97 95       	ror	r25
 70c:	87 95       	ror	r24
 70e:	08 95       	ret

00000710 <__cmpsf2>:
 710:	0e 94 3c 04 	call	0x878	; 0x878 <__fp_cmp>
 714:	08 f4       	brcc	.+2      	; 0x718 <__cmpsf2+0x8>
 716:	81 e0       	ldi	r24, 0x01	; 1
 718:	08 95       	ret

0000071a <__divsf3>:
 71a:	0e 94 a1 03 	call	0x742	; 0x742 <__divsf3x>
 71e:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_round>
 722:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__fp_pscB>
 726:	58 f0       	brcs	.+22     	; 0x73e <__divsf3+0x24>
 728:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__fp_pscA>
 72c:	40 f0       	brcs	.+16     	; 0x73e <__divsf3+0x24>
 72e:	29 f4       	brne	.+10     	; 0x73a <__divsf3+0x20>
 730:	5f 3f       	cpi	r21, 0xFF	; 255
 732:	29 f0       	breq	.+10     	; 0x73e <__divsf3+0x24>
 734:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__fp_inf>
 738:	51 11       	cpse	r21, r1
 73a:	0c 94 ab 04 	jmp	0x956	; 0x956 <__fp_szero>
 73e:	0c 94 66 04 	jmp	0x8cc	; 0x8cc <__fp_nan>

00000742 <__divsf3x>:
 742:	0e 94 88 04 	call	0x910	; 0x910 <__fp_split3>
 746:	68 f3       	brcs	.-38     	; 0x722 <__divsf3+0x8>

00000748 <__divsf3_pse>:
 748:	99 23       	and	r25, r25
 74a:	b1 f3       	breq	.-20     	; 0x738 <__divsf3+0x1e>
 74c:	55 23       	and	r21, r21
 74e:	91 f3       	breq	.-28     	; 0x734 <__divsf3+0x1a>
 750:	95 1b       	sub	r25, r21
 752:	55 0b       	sbc	r21, r21
 754:	bb 27       	eor	r27, r27
 756:	aa 27       	eor	r26, r26
 758:	62 17       	cp	r22, r18
 75a:	73 07       	cpc	r23, r19
 75c:	84 07       	cpc	r24, r20
 75e:	38 f0       	brcs	.+14     	; 0x76e <__divsf3_pse+0x26>
 760:	9f 5f       	subi	r25, 0xFF	; 255
 762:	5f 4f       	sbci	r21, 0xFF	; 255
 764:	22 0f       	add	r18, r18
 766:	33 1f       	adc	r19, r19
 768:	44 1f       	adc	r20, r20
 76a:	aa 1f       	adc	r26, r26
 76c:	a9 f3       	breq	.-22     	; 0x758 <__divsf3_pse+0x10>
 76e:	35 d0       	rcall	.+106    	; 0x7da <__divsf3_pse+0x92>
 770:	0e 2e       	mov	r0, r30
 772:	3a f0       	brmi	.+14     	; 0x782 <__divsf3_pse+0x3a>
 774:	e0 e8       	ldi	r30, 0x80	; 128
 776:	32 d0       	rcall	.+100    	; 0x7dc <__divsf3_pse+0x94>
 778:	91 50       	subi	r25, 0x01	; 1
 77a:	50 40       	sbci	r21, 0x00	; 0
 77c:	e6 95       	lsr	r30
 77e:	00 1c       	adc	r0, r0
 780:	ca f7       	brpl	.-14     	; 0x774 <__divsf3_pse+0x2c>
 782:	2b d0       	rcall	.+86     	; 0x7da <__divsf3_pse+0x92>
 784:	fe 2f       	mov	r31, r30
 786:	29 d0       	rcall	.+82     	; 0x7da <__divsf3_pse+0x92>
 788:	66 0f       	add	r22, r22
 78a:	77 1f       	adc	r23, r23
 78c:	88 1f       	adc	r24, r24
 78e:	bb 1f       	adc	r27, r27
 790:	26 17       	cp	r18, r22
 792:	37 07       	cpc	r19, r23
 794:	48 07       	cpc	r20, r24
 796:	ab 07       	cpc	r26, r27
 798:	b0 e8       	ldi	r27, 0x80	; 128
 79a:	09 f0       	breq	.+2      	; 0x79e <__divsf3_pse+0x56>
 79c:	bb 0b       	sbc	r27, r27
 79e:	80 2d       	mov	r24, r0
 7a0:	bf 01       	movw	r22, r30
 7a2:	ff 27       	eor	r31, r31
 7a4:	93 58       	subi	r25, 0x83	; 131
 7a6:	5f 4f       	sbci	r21, 0xFF	; 255
 7a8:	3a f0       	brmi	.+14     	; 0x7b8 <__divsf3_pse+0x70>
 7aa:	9e 3f       	cpi	r25, 0xFE	; 254
 7ac:	51 05       	cpc	r21, r1
 7ae:	78 f0       	brcs	.+30     	; 0x7ce <__divsf3_pse+0x86>
 7b0:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__fp_inf>
 7b4:	0c 94 ab 04 	jmp	0x956	; 0x956 <__fp_szero>
 7b8:	5f 3f       	cpi	r21, 0xFF	; 255
 7ba:	e4 f3       	brlt	.-8      	; 0x7b4 <__divsf3_pse+0x6c>
 7bc:	98 3e       	cpi	r25, 0xE8	; 232
 7be:	d4 f3       	brlt	.-12     	; 0x7b4 <__divsf3_pse+0x6c>
 7c0:	86 95       	lsr	r24
 7c2:	77 95       	ror	r23
 7c4:	67 95       	ror	r22
 7c6:	b7 95       	ror	r27
 7c8:	f7 95       	ror	r31
 7ca:	9f 5f       	subi	r25, 0xFF	; 255
 7cc:	c9 f7       	brne	.-14     	; 0x7c0 <__divsf3_pse+0x78>
 7ce:	88 0f       	add	r24, r24
 7d0:	91 1d       	adc	r25, r1
 7d2:	96 95       	lsr	r25
 7d4:	87 95       	ror	r24
 7d6:	97 f9       	bld	r25, 7
 7d8:	08 95       	ret
 7da:	e1 e0       	ldi	r30, 0x01	; 1
 7dc:	66 0f       	add	r22, r22
 7de:	77 1f       	adc	r23, r23
 7e0:	88 1f       	adc	r24, r24
 7e2:	bb 1f       	adc	r27, r27
 7e4:	62 17       	cp	r22, r18
 7e6:	73 07       	cpc	r23, r19
 7e8:	84 07       	cpc	r24, r20
 7ea:	ba 07       	cpc	r27, r26
 7ec:	20 f0       	brcs	.+8      	; 0x7f6 <__divsf3_pse+0xae>
 7ee:	62 1b       	sub	r22, r18
 7f0:	73 0b       	sbc	r23, r19
 7f2:	84 0b       	sbc	r24, r20
 7f4:	ba 0b       	sbc	r27, r26
 7f6:	ee 1f       	adc	r30, r30
 7f8:	88 f7       	brcc	.-30     	; 0x7dc <__divsf3_pse+0x94>
 7fa:	e0 95       	com	r30
 7fc:	08 95       	ret

000007fe <__floatunsisf>:
 7fe:	e8 94       	clt
 800:	09 c0       	rjmp	.+18     	; 0x814 <__floatsisf+0x12>

00000802 <__floatsisf>:
 802:	97 fb       	bst	r25, 7
 804:	3e f4       	brtc	.+14     	; 0x814 <__floatsisf+0x12>
 806:	90 95       	com	r25
 808:	80 95       	com	r24
 80a:	70 95       	com	r23
 80c:	61 95       	neg	r22
 80e:	7f 4f       	sbci	r23, 0xFF	; 255
 810:	8f 4f       	sbci	r24, 0xFF	; 255
 812:	9f 4f       	sbci	r25, 0xFF	; 255
 814:	99 23       	and	r25, r25
 816:	a9 f0       	breq	.+42     	; 0x842 <__floatsisf+0x40>
 818:	f9 2f       	mov	r31, r25
 81a:	96 e9       	ldi	r25, 0x96	; 150
 81c:	bb 27       	eor	r27, r27
 81e:	93 95       	inc	r25
 820:	f6 95       	lsr	r31
 822:	87 95       	ror	r24
 824:	77 95       	ror	r23
 826:	67 95       	ror	r22
 828:	b7 95       	ror	r27
 82a:	f1 11       	cpse	r31, r1
 82c:	f8 cf       	rjmp	.-16     	; 0x81e <__floatsisf+0x1c>
 82e:	fa f4       	brpl	.+62     	; 0x86e <__stack+0xf>
 830:	bb 0f       	add	r27, r27
 832:	11 f4       	brne	.+4      	; 0x838 <__floatsisf+0x36>
 834:	60 ff       	sbrs	r22, 0
 836:	1b c0       	rjmp	.+54     	; 0x86e <__stack+0xf>
 838:	6f 5f       	subi	r22, 0xFF	; 255
 83a:	7f 4f       	sbci	r23, 0xFF	; 255
 83c:	8f 4f       	sbci	r24, 0xFF	; 255
 83e:	9f 4f       	sbci	r25, 0xFF	; 255
 840:	16 c0       	rjmp	.+44     	; 0x86e <__stack+0xf>
 842:	88 23       	and	r24, r24
 844:	11 f0       	breq	.+4      	; 0x84a <__floatsisf+0x48>
 846:	96 e9       	ldi	r25, 0x96	; 150
 848:	11 c0       	rjmp	.+34     	; 0x86c <__stack+0xd>
 84a:	77 23       	and	r23, r23
 84c:	21 f0       	breq	.+8      	; 0x856 <__floatsisf+0x54>
 84e:	9e e8       	ldi	r25, 0x8E	; 142
 850:	87 2f       	mov	r24, r23
 852:	76 2f       	mov	r23, r22
 854:	05 c0       	rjmp	.+10     	; 0x860 <__stack+0x1>
 856:	66 23       	and	r22, r22
 858:	71 f0       	breq	.+28     	; 0x876 <__stack+0x17>
 85a:	96 e8       	ldi	r25, 0x86	; 134
 85c:	86 2f       	mov	r24, r22
 85e:	70 e0       	ldi	r23, 0x00	; 0
 860:	60 e0       	ldi	r22, 0x00	; 0
 862:	2a f0       	brmi	.+10     	; 0x86e <__stack+0xf>
 864:	9a 95       	dec	r25
 866:	66 0f       	add	r22, r22
 868:	77 1f       	adc	r23, r23
 86a:	88 1f       	adc	r24, r24
 86c:	da f7       	brpl	.-10     	; 0x864 <__stack+0x5>
 86e:	88 0f       	add	r24, r24
 870:	96 95       	lsr	r25
 872:	87 95       	ror	r24
 874:	97 f9       	bld	r25, 7
 876:	08 95       	ret

00000878 <__fp_cmp>:
 878:	99 0f       	add	r25, r25
 87a:	00 08       	sbc	r0, r0
 87c:	55 0f       	add	r21, r21
 87e:	aa 0b       	sbc	r26, r26
 880:	e0 e8       	ldi	r30, 0x80	; 128
 882:	fe ef       	ldi	r31, 0xFE	; 254
 884:	16 16       	cp	r1, r22
 886:	17 06       	cpc	r1, r23
 888:	e8 07       	cpc	r30, r24
 88a:	f9 07       	cpc	r31, r25
 88c:	c0 f0       	brcs	.+48     	; 0x8be <__fp_cmp+0x46>
 88e:	12 16       	cp	r1, r18
 890:	13 06       	cpc	r1, r19
 892:	e4 07       	cpc	r30, r20
 894:	f5 07       	cpc	r31, r21
 896:	98 f0       	brcs	.+38     	; 0x8be <__fp_cmp+0x46>
 898:	62 1b       	sub	r22, r18
 89a:	73 0b       	sbc	r23, r19
 89c:	84 0b       	sbc	r24, r20
 89e:	95 0b       	sbc	r25, r21
 8a0:	39 f4       	brne	.+14     	; 0x8b0 <__fp_cmp+0x38>
 8a2:	0a 26       	eor	r0, r26
 8a4:	61 f0       	breq	.+24     	; 0x8be <__fp_cmp+0x46>
 8a6:	23 2b       	or	r18, r19
 8a8:	24 2b       	or	r18, r20
 8aa:	25 2b       	or	r18, r21
 8ac:	21 f4       	brne	.+8      	; 0x8b6 <__fp_cmp+0x3e>
 8ae:	08 95       	ret
 8b0:	0a 26       	eor	r0, r26
 8b2:	09 f4       	brne	.+2      	; 0x8b6 <__fp_cmp+0x3e>
 8b4:	a1 40       	sbci	r26, 0x01	; 1
 8b6:	a6 95       	lsr	r26
 8b8:	8f ef       	ldi	r24, 0xFF	; 255
 8ba:	81 1d       	adc	r24, r1
 8bc:	81 1d       	adc	r24, r1
 8be:	08 95       	ret

000008c0 <__fp_inf>:
 8c0:	97 f9       	bld	r25, 7
 8c2:	9f 67       	ori	r25, 0x7F	; 127
 8c4:	80 e8       	ldi	r24, 0x80	; 128
 8c6:	70 e0       	ldi	r23, 0x00	; 0
 8c8:	60 e0       	ldi	r22, 0x00	; 0
 8ca:	08 95       	ret

000008cc <__fp_nan>:
 8cc:	9f ef       	ldi	r25, 0xFF	; 255
 8ce:	80 ec       	ldi	r24, 0xC0	; 192
 8d0:	08 95       	ret

000008d2 <__fp_pscA>:
 8d2:	00 24       	eor	r0, r0
 8d4:	0a 94       	dec	r0
 8d6:	16 16       	cp	r1, r22
 8d8:	17 06       	cpc	r1, r23
 8da:	18 06       	cpc	r1, r24
 8dc:	09 06       	cpc	r0, r25
 8de:	08 95       	ret

000008e0 <__fp_pscB>:
 8e0:	00 24       	eor	r0, r0
 8e2:	0a 94       	dec	r0
 8e4:	12 16       	cp	r1, r18
 8e6:	13 06       	cpc	r1, r19
 8e8:	14 06       	cpc	r1, r20
 8ea:	05 06       	cpc	r0, r21
 8ec:	08 95       	ret

000008ee <__fp_round>:
 8ee:	09 2e       	mov	r0, r25
 8f0:	03 94       	inc	r0
 8f2:	00 0c       	add	r0, r0
 8f4:	11 f4       	brne	.+4      	; 0x8fa <__fp_round+0xc>
 8f6:	88 23       	and	r24, r24
 8f8:	52 f0       	brmi	.+20     	; 0x90e <__fp_round+0x20>
 8fa:	bb 0f       	add	r27, r27
 8fc:	40 f4       	brcc	.+16     	; 0x90e <__fp_round+0x20>
 8fe:	bf 2b       	or	r27, r31
 900:	11 f4       	brne	.+4      	; 0x906 <__fp_round+0x18>
 902:	60 ff       	sbrs	r22, 0
 904:	04 c0       	rjmp	.+8      	; 0x90e <__fp_round+0x20>
 906:	6f 5f       	subi	r22, 0xFF	; 255
 908:	7f 4f       	sbci	r23, 0xFF	; 255
 90a:	8f 4f       	sbci	r24, 0xFF	; 255
 90c:	9f 4f       	sbci	r25, 0xFF	; 255
 90e:	08 95       	ret

00000910 <__fp_split3>:
 910:	57 fd       	sbrc	r21, 7
 912:	90 58       	subi	r25, 0x80	; 128
 914:	44 0f       	add	r20, r20
 916:	55 1f       	adc	r21, r21
 918:	59 f0       	breq	.+22     	; 0x930 <__fp_splitA+0x10>
 91a:	5f 3f       	cpi	r21, 0xFF	; 255
 91c:	71 f0       	breq	.+28     	; 0x93a <__fp_splitA+0x1a>
 91e:	47 95       	ror	r20

00000920 <__fp_splitA>:
 920:	88 0f       	add	r24, r24
 922:	97 fb       	bst	r25, 7
 924:	99 1f       	adc	r25, r25
 926:	61 f0       	breq	.+24     	; 0x940 <__fp_splitA+0x20>
 928:	9f 3f       	cpi	r25, 0xFF	; 255
 92a:	79 f0       	breq	.+30     	; 0x94a <__fp_splitA+0x2a>
 92c:	87 95       	ror	r24
 92e:	08 95       	ret
 930:	12 16       	cp	r1, r18
 932:	13 06       	cpc	r1, r19
 934:	14 06       	cpc	r1, r20
 936:	55 1f       	adc	r21, r21
 938:	f2 cf       	rjmp	.-28     	; 0x91e <__fp_split3+0xe>
 93a:	46 95       	lsr	r20
 93c:	f1 df       	rcall	.-30     	; 0x920 <__fp_splitA>
 93e:	08 c0       	rjmp	.+16     	; 0x950 <__fp_splitA+0x30>
 940:	16 16       	cp	r1, r22
 942:	17 06       	cpc	r1, r23
 944:	18 06       	cpc	r1, r24
 946:	99 1f       	adc	r25, r25
 948:	f1 cf       	rjmp	.-30     	; 0x92c <__fp_splitA+0xc>
 94a:	86 95       	lsr	r24
 94c:	71 05       	cpc	r23, r1
 94e:	61 05       	cpc	r22, r1
 950:	08 94       	sec
 952:	08 95       	ret

00000954 <__fp_zero>:
 954:	e8 94       	clt

00000956 <__fp_szero>:
 956:	bb 27       	eor	r27, r27
 958:	66 27       	eor	r22, r22
 95a:	77 27       	eor	r23, r23
 95c:	cb 01       	movw	r24, r22
 95e:	97 f9       	bld	r25, 7
 960:	08 95       	ret

00000962 <__gesf2>:
 962:	0e 94 3c 04 	call	0x878	; 0x878 <__fp_cmp>
 966:	08 f4       	brcc	.+2      	; 0x96a <__gesf2+0x8>
 968:	8f ef       	ldi	r24, 0xFF	; 255
 96a:	08 95       	ret

0000096c <__mulsf3>:
 96c:	0e 94 c9 04 	call	0x992	; 0x992 <__mulsf3x>
 970:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_round>
 974:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__fp_pscA>
 978:	38 f0       	brcs	.+14     	; 0x988 <__mulsf3+0x1c>
 97a:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__fp_pscB>
 97e:	20 f0       	brcs	.+8      	; 0x988 <__mulsf3+0x1c>
 980:	95 23       	and	r25, r21
 982:	11 f0       	breq	.+4      	; 0x988 <__mulsf3+0x1c>
 984:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__fp_inf>
 988:	0c 94 66 04 	jmp	0x8cc	; 0x8cc <__fp_nan>
 98c:	11 24       	eor	r1, r1
 98e:	0c 94 ab 04 	jmp	0x956	; 0x956 <__fp_szero>

00000992 <__mulsf3x>:
 992:	0e 94 88 04 	call	0x910	; 0x910 <__fp_split3>
 996:	70 f3       	brcs	.-36     	; 0x974 <__mulsf3+0x8>

00000998 <__mulsf3_pse>:
 998:	95 9f       	mul	r25, r21
 99a:	c1 f3       	breq	.-16     	; 0x98c <__mulsf3+0x20>
 99c:	95 0f       	add	r25, r21
 99e:	50 e0       	ldi	r21, 0x00	; 0
 9a0:	55 1f       	adc	r21, r21
 9a2:	62 9f       	mul	r22, r18
 9a4:	f0 01       	movw	r30, r0
 9a6:	72 9f       	mul	r23, r18
 9a8:	bb 27       	eor	r27, r27
 9aa:	f0 0d       	add	r31, r0
 9ac:	b1 1d       	adc	r27, r1
 9ae:	63 9f       	mul	r22, r19
 9b0:	aa 27       	eor	r26, r26
 9b2:	f0 0d       	add	r31, r0
 9b4:	b1 1d       	adc	r27, r1
 9b6:	aa 1f       	adc	r26, r26
 9b8:	64 9f       	mul	r22, r20
 9ba:	66 27       	eor	r22, r22
 9bc:	b0 0d       	add	r27, r0
 9be:	a1 1d       	adc	r26, r1
 9c0:	66 1f       	adc	r22, r22
 9c2:	82 9f       	mul	r24, r18
 9c4:	22 27       	eor	r18, r18
 9c6:	b0 0d       	add	r27, r0
 9c8:	a1 1d       	adc	r26, r1
 9ca:	62 1f       	adc	r22, r18
 9cc:	73 9f       	mul	r23, r19
 9ce:	b0 0d       	add	r27, r0
 9d0:	a1 1d       	adc	r26, r1
 9d2:	62 1f       	adc	r22, r18
 9d4:	83 9f       	mul	r24, r19
 9d6:	a0 0d       	add	r26, r0
 9d8:	61 1d       	adc	r22, r1
 9da:	22 1f       	adc	r18, r18
 9dc:	74 9f       	mul	r23, r20
 9de:	33 27       	eor	r19, r19
 9e0:	a0 0d       	add	r26, r0
 9e2:	61 1d       	adc	r22, r1
 9e4:	23 1f       	adc	r18, r19
 9e6:	84 9f       	mul	r24, r20
 9e8:	60 0d       	add	r22, r0
 9ea:	21 1d       	adc	r18, r1
 9ec:	82 2f       	mov	r24, r18
 9ee:	76 2f       	mov	r23, r22
 9f0:	6a 2f       	mov	r22, r26
 9f2:	11 24       	eor	r1, r1
 9f4:	9f 57       	subi	r25, 0x7F	; 127
 9f6:	50 40       	sbci	r21, 0x00	; 0
 9f8:	9a f0       	brmi	.+38     	; 0xa20 <__mulsf3_pse+0x88>
 9fa:	f1 f0       	breq	.+60     	; 0xa38 <__mulsf3_pse+0xa0>
 9fc:	88 23       	and	r24, r24
 9fe:	4a f0       	brmi	.+18     	; 0xa12 <__mulsf3_pse+0x7a>
 a00:	ee 0f       	add	r30, r30
 a02:	ff 1f       	adc	r31, r31
 a04:	bb 1f       	adc	r27, r27
 a06:	66 1f       	adc	r22, r22
 a08:	77 1f       	adc	r23, r23
 a0a:	88 1f       	adc	r24, r24
 a0c:	91 50       	subi	r25, 0x01	; 1
 a0e:	50 40       	sbci	r21, 0x00	; 0
 a10:	a9 f7       	brne	.-22     	; 0x9fc <__mulsf3_pse+0x64>
 a12:	9e 3f       	cpi	r25, 0xFE	; 254
 a14:	51 05       	cpc	r21, r1
 a16:	80 f0       	brcs	.+32     	; 0xa38 <__mulsf3_pse+0xa0>
 a18:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__fp_inf>
 a1c:	0c 94 ab 04 	jmp	0x956	; 0x956 <__fp_szero>
 a20:	5f 3f       	cpi	r21, 0xFF	; 255
 a22:	e4 f3       	brlt	.-8      	; 0xa1c <__mulsf3_pse+0x84>
 a24:	98 3e       	cpi	r25, 0xE8	; 232
 a26:	d4 f3       	brlt	.-12     	; 0xa1c <__mulsf3_pse+0x84>
 a28:	86 95       	lsr	r24
 a2a:	77 95       	ror	r23
 a2c:	67 95       	ror	r22
 a2e:	b7 95       	ror	r27
 a30:	f7 95       	ror	r31
 a32:	e7 95       	ror	r30
 a34:	9f 5f       	subi	r25, 0xFF	; 255
 a36:	c1 f7       	brne	.-16     	; 0xa28 <__mulsf3_pse+0x90>
 a38:	fe 2b       	or	r31, r30
 a3a:	88 0f       	add	r24, r24
 a3c:	91 1d       	adc	r25, r1
 a3e:	96 95       	lsr	r25
 a40:	87 95       	ror	r24
 a42:	97 f9       	bld	r25, 7
 a44:	08 95       	ret

00000a46 <dtostrf>:
 a46:	ef 92       	push	r14
 a48:	0f 93       	push	r16
 a4a:	1f 93       	push	r17
 a4c:	cf 93       	push	r28
 a4e:	df 93       	push	r29
 a50:	e8 01       	movw	r28, r16
 a52:	47 fd       	sbrc	r20, 7
 a54:	02 c0       	rjmp	.+4      	; 0xa5a <dtostrf+0x14>
 a56:	34 e0       	ldi	r19, 0x04	; 4
 a58:	01 c0       	rjmp	.+2      	; 0xa5c <dtostrf+0x16>
 a5a:	34 e1       	ldi	r19, 0x14	; 20
 a5c:	04 2e       	mov	r0, r20
 a5e:	00 0c       	add	r0, r0
 a60:	55 0b       	sbc	r21, r21
 a62:	57 ff       	sbrs	r21, 7
 a64:	03 c0       	rjmp	.+6      	; 0xa6c <dtostrf+0x26>
 a66:	51 95       	neg	r21
 a68:	41 95       	neg	r20
 a6a:	51 09       	sbc	r21, r1
 a6c:	e3 2e       	mov	r14, r19
 a6e:	02 2f       	mov	r16, r18
 a70:	24 2f       	mov	r18, r20
 a72:	ae 01       	movw	r20, r28
 a74:	0e 94 43 05 	call	0xa86	; 0xa86 <dtoa_prf>
 a78:	ce 01       	movw	r24, r28
 a7a:	df 91       	pop	r29
 a7c:	cf 91       	pop	r28
 a7e:	1f 91       	pop	r17
 a80:	0f 91       	pop	r16
 a82:	ef 90       	pop	r14
 a84:	08 95       	ret

00000a86 <dtoa_prf>:
 a86:	a9 e0       	ldi	r26, 0x09	; 9
 a88:	b0 e0       	ldi	r27, 0x00	; 0
 a8a:	e9 e4       	ldi	r30, 0x49	; 73
 a8c:	f5 e0       	ldi	r31, 0x05	; 5
 a8e:	0c 94 7b 07 	jmp	0xef6	; 0xef6 <__prologue_saves__+0xc>
 a92:	6a 01       	movw	r12, r20
 a94:	12 2f       	mov	r17, r18
 a96:	b0 2e       	mov	r11, r16
 a98:	2b e3       	ldi	r18, 0x3B	; 59
 a9a:	20 17       	cp	r18, r16
 a9c:	20 f0       	brcs	.+8      	; 0xaa6 <dtoa_prf+0x20>
 a9e:	ff 24       	eor	r15, r15
 aa0:	f3 94       	inc	r15
 aa2:	f0 0e       	add	r15, r16
 aa4:	02 c0       	rjmp	.+4      	; 0xaaa <dtoa_prf+0x24>
 aa6:	2c e3       	ldi	r18, 0x3C	; 60
 aa8:	f2 2e       	mov	r15, r18
 aaa:	0f 2d       	mov	r16, r15
 aac:	27 e0       	ldi	r18, 0x07	; 7
 aae:	ae 01       	movw	r20, r28
 ab0:	4f 5f       	subi	r20, 0xFF	; 255
 ab2:	5f 4f       	sbci	r21, 0xFF	; 255
 ab4:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__ftoa_engine>
 ab8:	bc 01       	movw	r22, r24
 aba:	49 81       	ldd	r20, Y+1	; 0x01
 abc:	84 2f       	mov	r24, r20
 abe:	89 70       	andi	r24, 0x09	; 9
 ac0:	81 30       	cpi	r24, 0x01	; 1
 ac2:	31 f0       	breq	.+12     	; 0xad0 <dtoa_prf+0x4a>
 ac4:	e1 fc       	sbrc	r14, 1
 ac6:	06 c0       	rjmp	.+12     	; 0xad4 <dtoa_prf+0x4e>
 ac8:	e0 fe       	sbrs	r14, 0
 aca:	06 c0       	rjmp	.+12     	; 0xad8 <dtoa_prf+0x52>
 acc:	90 e2       	ldi	r25, 0x20	; 32
 ace:	05 c0       	rjmp	.+10     	; 0xada <dtoa_prf+0x54>
 ad0:	9d e2       	ldi	r25, 0x2D	; 45
 ad2:	03 c0       	rjmp	.+6      	; 0xada <dtoa_prf+0x54>
 ad4:	9b e2       	ldi	r25, 0x2B	; 43
 ad6:	01 c0       	rjmp	.+2      	; 0xada <dtoa_prf+0x54>
 ad8:	90 e0       	ldi	r25, 0x00	; 0
 ada:	5e 2d       	mov	r21, r14
 adc:	50 71       	andi	r21, 0x10	; 16
 ade:	43 ff       	sbrs	r20, 3
 ae0:	3c c0       	rjmp	.+120    	; 0xb5a <dtoa_prf+0xd4>
 ae2:	91 11       	cpse	r25, r1
 ae4:	02 c0       	rjmp	.+4      	; 0xaea <dtoa_prf+0x64>
 ae6:	83 e0       	ldi	r24, 0x03	; 3
 ae8:	01 c0       	rjmp	.+2      	; 0xaec <dtoa_prf+0x66>
 aea:	84 e0       	ldi	r24, 0x04	; 4
 aec:	81 17       	cp	r24, r17
 aee:	18 f4       	brcc	.+6      	; 0xaf6 <dtoa_prf+0x70>
 af0:	21 2f       	mov	r18, r17
 af2:	28 1b       	sub	r18, r24
 af4:	01 c0       	rjmp	.+2      	; 0xaf8 <dtoa_prf+0x72>
 af6:	20 e0       	ldi	r18, 0x00	; 0
 af8:	51 11       	cpse	r21, r1
 afa:	0b c0       	rjmp	.+22     	; 0xb12 <dtoa_prf+0x8c>
 afc:	f6 01       	movw	r30, r12
 afe:	82 2f       	mov	r24, r18
 b00:	30 e2       	ldi	r19, 0x20	; 32
 b02:	88 23       	and	r24, r24
 b04:	19 f0       	breq	.+6      	; 0xb0c <dtoa_prf+0x86>
 b06:	31 93       	st	Z+, r19
 b08:	81 50       	subi	r24, 0x01	; 1
 b0a:	fb cf       	rjmp	.-10     	; 0xb02 <dtoa_prf+0x7c>
 b0c:	c2 0e       	add	r12, r18
 b0e:	d1 1c       	adc	r13, r1
 b10:	20 e0       	ldi	r18, 0x00	; 0
 b12:	99 23       	and	r25, r25
 b14:	29 f0       	breq	.+10     	; 0xb20 <dtoa_prf+0x9a>
 b16:	d6 01       	movw	r26, r12
 b18:	9c 93       	st	X, r25
 b1a:	f6 01       	movw	r30, r12
 b1c:	31 96       	adiw	r30, 0x01	; 1
 b1e:	6f 01       	movw	r12, r30
 b20:	c6 01       	movw	r24, r12
 b22:	03 96       	adiw	r24, 0x03	; 3
 b24:	e2 fe       	sbrs	r14, 2
 b26:	0a c0       	rjmp	.+20     	; 0xb3c <dtoa_prf+0xb6>
 b28:	3e e4       	ldi	r19, 0x4E	; 78
 b2a:	d6 01       	movw	r26, r12
 b2c:	3c 93       	st	X, r19
 b2e:	41 e4       	ldi	r20, 0x41	; 65
 b30:	11 96       	adiw	r26, 0x01	; 1
 b32:	4c 93       	st	X, r20
 b34:	11 97       	sbiw	r26, 0x01	; 1
 b36:	12 96       	adiw	r26, 0x02	; 2
 b38:	3c 93       	st	X, r19
 b3a:	06 c0       	rjmp	.+12     	; 0xb48 <dtoa_prf+0xc2>
 b3c:	3e e6       	ldi	r19, 0x6E	; 110
 b3e:	f6 01       	movw	r30, r12
 b40:	30 83       	st	Z, r19
 b42:	41 e6       	ldi	r20, 0x61	; 97
 b44:	41 83       	std	Z+1, r20	; 0x01
 b46:	32 83       	std	Z+2, r19	; 0x02
 b48:	fc 01       	movw	r30, r24
 b4a:	32 2f       	mov	r19, r18
 b4c:	40 e2       	ldi	r20, 0x20	; 32
 b4e:	33 23       	and	r19, r19
 b50:	09 f4       	brne	.+2      	; 0xb54 <dtoa_prf+0xce>
 b52:	42 c0       	rjmp	.+132    	; 0xbd8 <dtoa_prf+0x152>
 b54:	41 93       	st	Z+, r20
 b56:	31 50       	subi	r19, 0x01	; 1
 b58:	fa cf       	rjmp	.-12     	; 0xb4e <dtoa_prf+0xc8>
 b5a:	42 ff       	sbrs	r20, 2
 b5c:	44 c0       	rjmp	.+136    	; 0xbe6 <dtoa_prf+0x160>
 b5e:	91 11       	cpse	r25, r1
 b60:	02 c0       	rjmp	.+4      	; 0xb66 <dtoa_prf+0xe0>
 b62:	83 e0       	ldi	r24, 0x03	; 3
 b64:	01 c0       	rjmp	.+2      	; 0xb68 <dtoa_prf+0xe2>
 b66:	84 e0       	ldi	r24, 0x04	; 4
 b68:	81 17       	cp	r24, r17
 b6a:	18 f4       	brcc	.+6      	; 0xb72 <dtoa_prf+0xec>
 b6c:	21 2f       	mov	r18, r17
 b6e:	28 1b       	sub	r18, r24
 b70:	01 c0       	rjmp	.+2      	; 0xb74 <dtoa_prf+0xee>
 b72:	20 e0       	ldi	r18, 0x00	; 0
 b74:	51 11       	cpse	r21, r1
 b76:	0b c0       	rjmp	.+22     	; 0xb8e <dtoa_prf+0x108>
 b78:	f6 01       	movw	r30, r12
 b7a:	82 2f       	mov	r24, r18
 b7c:	30 e2       	ldi	r19, 0x20	; 32
 b7e:	88 23       	and	r24, r24
 b80:	19 f0       	breq	.+6      	; 0xb88 <dtoa_prf+0x102>
 b82:	31 93       	st	Z+, r19
 b84:	81 50       	subi	r24, 0x01	; 1
 b86:	fb cf       	rjmp	.-10     	; 0xb7e <dtoa_prf+0xf8>
 b88:	c2 0e       	add	r12, r18
 b8a:	d1 1c       	adc	r13, r1
 b8c:	20 e0       	ldi	r18, 0x00	; 0
 b8e:	99 23       	and	r25, r25
 b90:	29 f0       	breq	.+10     	; 0xb9c <dtoa_prf+0x116>
 b92:	d6 01       	movw	r26, r12
 b94:	9c 93       	st	X, r25
 b96:	f6 01       	movw	r30, r12
 b98:	31 96       	adiw	r30, 0x01	; 1
 b9a:	6f 01       	movw	r12, r30
 b9c:	c6 01       	movw	r24, r12
 b9e:	03 96       	adiw	r24, 0x03	; 3
 ba0:	e2 fe       	sbrs	r14, 2
 ba2:	0b c0       	rjmp	.+22     	; 0xbba <dtoa_prf+0x134>
 ba4:	39 e4       	ldi	r19, 0x49	; 73
 ba6:	d6 01       	movw	r26, r12
 ba8:	3c 93       	st	X, r19
 baa:	3e e4       	ldi	r19, 0x4E	; 78
 bac:	11 96       	adiw	r26, 0x01	; 1
 bae:	3c 93       	st	X, r19
 bb0:	11 97       	sbiw	r26, 0x01	; 1
 bb2:	36 e4       	ldi	r19, 0x46	; 70
 bb4:	12 96       	adiw	r26, 0x02	; 2
 bb6:	3c 93       	st	X, r19
 bb8:	07 c0       	rjmp	.+14     	; 0xbc8 <dtoa_prf+0x142>
 bba:	39 e6       	ldi	r19, 0x69	; 105
 bbc:	f6 01       	movw	r30, r12
 bbe:	30 83       	st	Z, r19
 bc0:	3e e6       	ldi	r19, 0x6E	; 110
 bc2:	31 83       	std	Z+1, r19	; 0x01
 bc4:	36 e6       	ldi	r19, 0x66	; 102
 bc6:	32 83       	std	Z+2, r19	; 0x02
 bc8:	fc 01       	movw	r30, r24
 bca:	32 2f       	mov	r19, r18
 bcc:	40 e2       	ldi	r20, 0x20	; 32
 bce:	33 23       	and	r19, r19
 bd0:	19 f0       	breq	.+6      	; 0xbd8 <dtoa_prf+0x152>
 bd2:	41 93       	st	Z+, r20
 bd4:	31 50       	subi	r19, 0x01	; 1
 bd6:	fb cf       	rjmp	.-10     	; 0xbce <dtoa_prf+0x148>
 bd8:	fc 01       	movw	r30, r24
 bda:	e2 0f       	add	r30, r18
 bdc:	f1 1d       	adc	r31, r1
 bde:	10 82       	st	Z, r1
 be0:	8e ef       	ldi	r24, 0xFE	; 254
 be2:	9f ef       	ldi	r25, 0xFF	; 255
 be4:	a6 c0       	rjmp	.+332    	; 0xd32 <dtoa_prf+0x2ac>
 be6:	21 e0       	ldi	r18, 0x01	; 1
 be8:	30 e0       	ldi	r19, 0x00	; 0
 bea:	91 11       	cpse	r25, r1
 bec:	02 c0       	rjmp	.+4      	; 0xbf2 <dtoa_prf+0x16c>
 bee:	20 e0       	ldi	r18, 0x00	; 0
 bf0:	30 e0       	ldi	r19, 0x00	; 0
 bf2:	16 16       	cp	r1, r22
 bf4:	17 06       	cpc	r1, r23
 bf6:	1c f4       	brge	.+6      	; 0xbfe <dtoa_prf+0x178>
 bf8:	fb 01       	movw	r30, r22
 bfa:	31 96       	adiw	r30, 0x01	; 1
 bfc:	02 c0       	rjmp	.+4      	; 0xc02 <dtoa_prf+0x17c>
 bfe:	e1 e0       	ldi	r30, 0x01	; 1
 c00:	f0 e0       	ldi	r31, 0x00	; 0
 c02:	2e 0f       	add	r18, r30
 c04:	3f 1f       	adc	r19, r31
 c06:	bb 20       	and	r11, r11
 c08:	21 f0       	breq	.+8      	; 0xc12 <dtoa_prf+0x18c>
 c0a:	eb 2d       	mov	r30, r11
 c0c:	f0 e0       	ldi	r31, 0x00	; 0
 c0e:	31 96       	adiw	r30, 0x01	; 1
 c10:	02 c0       	rjmp	.+4      	; 0xc16 <dtoa_prf+0x190>
 c12:	e0 e0       	ldi	r30, 0x00	; 0
 c14:	f0 e0       	ldi	r31, 0x00	; 0
 c16:	2e 0f       	add	r18, r30
 c18:	3f 1f       	adc	r19, r31
 c1a:	e1 2f       	mov	r30, r17
 c1c:	f0 e0       	ldi	r31, 0x00	; 0
 c1e:	2e 17       	cp	r18, r30
 c20:	3f 07       	cpc	r19, r31
 c22:	1c f4       	brge	.+6      	; 0xc2a <dtoa_prf+0x1a4>
 c24:	12 1b       	sub	r17, r18
 c26:	21 2f       	mov	r18, r17
 c28:	01 c0       	rjmp	.+2      	; 0xc2c <dtoa_prf+0x1a6>
 c2a:	20 e0       	ldi	r18, 0x00	; 0
 c2c:	8e 2d       	mov	r24, r14
 c2e:	88 71       	andi	r24, 0x18	; 24
 c30:	59 f4       	brne	.+22     	; 0xc48 <dtoa_prf+0x1c2>
 c32:	f6 01       	movw	r30, r12
 c34:	82 2f       	mov	r24, r18
 c36:	30 e2       	ldi	r19, 0x20	; 32
 c38:	88 23       	and	r24, r24
 c3a:	19 f0       	breq	.+6      	; 0xc42 <dtoa_prf+0x1bc>
 c3c:	31 93       	st	Z+, r19
 c3e:	81 50       	subi	r24, 0x01	; 1
 c40:	fb cf       	rjmp	.-10     	; 0xc38 <dtoa_prf+0x1b2>
 c42:	c2 0e       	add	r12, r18
 c44:	d1 1c       	adc	r13, r1
 c46:	20 e0       	ldi	r18, 0x00	; 0
 c48:	99 23       	and	r25, r25
 c4a:	29 f0       	breq	.+10     	; 0xc56 <dtoa_prf+0x1d0>
 c4c:	d6 01       	movw	r26, r12
 c4e:	9c 93       	st	X, r25
 c50:	f6 01       	movw	r30, r12
 c52:	31 96       	adiw	r30, 0x01	; 1
 c54:	6f 01       	movw	r12, r30
 c56:	51 11       	cpse	r21, r1
 c58:	0b c0       	rjmp	.+22     	; 0xc70 <dtoa_prf+0x1ea>
 c5a:	f6 01       	movw	r30, r12
 c5c:	82 2f       	mov	r24, r18
 c5e:	90 e3       	ldi	r25, 0x30	; 48
 c60:	88 23       	and	r24, r24
 c62:	19 f0       	breq	.+6      	; 0xc6a <dtoa_prf+0x1e4>
 c64:	91 93       	st	Z+, r25
 c66:	81 50       	subi	r24, 0x01	; 1
 c68:	fb cf       	rjmp	.-10     	; 0xc60 <dtoa_prf+0x1da>
 c6a:	c2 0e       	add	r12, r18
 c6c:	d1 1c       	adc	r13, r1
 c6e:	20 e0       	ldi	r18, 0x00	; 0
 c70:	0f 2d       	mov	r16, r15
 c72:	06 0f       	add	r16, r22
 c74:	9a 81       	ldd	r25, Y+2	; 0x02
 c76:	34 2f       	mov	r19, r20
 c78:	30 71       	andi	r19, 0x10	; 16
 c7a:	44 ff       	sbrs	r20, 4
 c7c:	03 c0       	rjmp	.+6      	; 0xc84 <dtoa_prf+0x1fe>
 c7e:	91 33       	cpi	r25, 0x31	; 49
 c80:	09 f4       	brne	.+2      	; 0xc84 <dtoa_prf+0x1fe>
 c82:	01 50       	subi	r16, 0x01	; 1
 c84:	10 16       	cp	r1, r16
 c86:	24 f4       	brge	.+8      	; 0xc90 <dtoa_prf+0x20a>
 c88:	09 30       	cpi	r16, 0x09	; 9
 c8a:	18 f0       	brcs	.+6      	; 0xc92 <dtoa_prf+0x20c>
 c8c:	08 e0       	ldi	r16, 0x08	; 8
 c8e:	01 c0       	rjmp	.+2      	; 0xc92 <dtoa_prf+0x20c>
 c90:	01 e0       	ldi	r16, 0x01	; 1
 c92:	ab 01       	movw	r20, r22
 c94:	77 ff       	sbrs	r23, 7
 c96:	02 c0       	rjmp	.+4      	; 0xc9c <dtoa_prf+0x216>
 c98:	40 e0       	ldi	r20, 0x00	; 0
 c9a:	50 e0       	ldi	r21, 0x00	; 0
 c9c:	fb 01       	movw	r30, r22
 c9e:	e4 1b       	sub	r30, r20
 ca0:	f5 0b       	sbc	r31, r21
 ca2:	a1 e0       	ldi	r26, 0x01	; 1
 ca4:	b0 e0       	ldi	r27, 0x00	; 0
 ca6:	ac 0f       	add	r26, r28
 ca8:	bd 1f       	adc	r27, r29
 caa:	ea 0f       	add	r30, r26
 cac:	fb 1f       	adc	r31, r27
 cae:	8e e2       	ldi	r24, 0x2E	; 46
 cb0:	a8 2e       	mov	r10, r24
 cb2:	4b 01       	movw	r8, r22
 cb4:	80 1a       	sub	r8, r16
 cb6:	91 08       	sbc	r9, r1
 cb8:	0b 2d       	mov	r16, r11
 cba:	10 e0       	ldi	r17, 0x00	; 0
 cbc:	11 95       	neg	r17
 cbe:	01 95       	neg	r16
 cc0:	11 09       	sbc	r17, r1
 cc2:	4f 3f       	cpi	r20, 0xFF	; 255
 cc4:	bf ef       	ldi	r27, 0xFF	; 255
 cc6:	5b 07       	cpc	r21, r27
 cc8:	21 f4       	brne	.+8      	; 0xcd2 <dtoa_prf+0x24c>
 cca:	d6 01       	movw	r26, r12
 ccc:	ac 92       	st	X, r10
 cce:	11 96       	adiw	r26, 0x01	; 1
 cd0:	6d 01       	movw	r12, r26
 cd2:	64 17       	cp	r22, r20
 cd4:	75 07       	cpc	r23, r21
 cd6:	2c f0       	brlt	.+10     	; 0xce2 <dtoa_prf+0x25c>
 cd8:	84 16       	cp	r8, r20
 cda:	95 06       	cpc	r9, r21
 cdc:	14 f4       	brge	.+4      	; 0xce2 <dtoa_prf+0x25c>
 cde:	81 81       	ldd	r24, Z+1	; 0x01
 ce0:	01 c0       	rjmp	.+2      	; 0xce4 <dtoa_prf+0x25e>
 ce2:	80 e3       	ldi	r24, 0x30	; 48
 ce4:	41 50       	subi	r20, 0x01	; 1
 ce6:	51 09       	sbc	r21, r1
 ce8:	31 96       	adiw	r30, 0x01	; 1
 cea:	d6 01       	movw	r26, r12
 cec:	11 96       	adiw	r26, 0x01	; 1
 cee:	7d 01       	movw	r14, r26
 cf0:	40 17       	cp	r20, r16
 cf2:	51 07       	cpc	r21, r17
 cf4:	24 f0       	brlt	.+8      	; 0xcfe <dtoa_prf+0x278>
 cf6:	d6 01       	movw	r26, r12
 cf8:	8c 93       	st	X, r24
 cfa:	67 01       	movw	r12, r14
 cfc:	e2 cf       	rjmp	.-60     	; 0xcc2 <dtoa_prf+0x23c>
 cfe:	64 17       	cp	r22, r20
 d00:	75 07       	cpc	r23, r21
 d02:	39 f4       	brne	.+14     	; 0xd12 <dtoa_prf+0x28c>
 d04:	96 33       	cpi	r25, 0x36	; 54
 d06:	20 f4       	brcc	.+8      	; 0xd10 <dtoa_prf+0x28a>
 d08:	95 33       	cpi	r25, 0x35	; 53
 d0a:	19 f4       	brne	.+6      	; 0xd12 <dtoa_prf+0x28c>
 d0c:	31 11       	cpse	r19, r1
 d0e:	01 c0       	rjmp	.+2      	; 0xd12 <dtoa_prf+0x28c>
 d10:	81 e3       	ldi	r24, 0x31	; 49
 d12:	f6 01       	movw	r30, r12
 d14:	80 83       	st	Z, r24
 d16:	f7 01       	movw	r30, r14
 d18:	82 2f       	mov	r24, r18
 d1a:	90 e2       	ldi	r25, 0x20	; 32
 d1c:	88 23       	and	r24, r24
 d1e:	19 f0       	breq	.+6      	; 0xd26 <dtoa_prf+0x2a0>
 d20:	91 93       	st	Z+, r25
 d22:	81 50       	subi	r24, 0x01	; 1
 d24:	fb cf       	rjmp	.-10     	; 0xd1c <dtoa_prf+0x296>
 d26:	f7 01       	movw	r30, r14
 d28:	e2 0f       	add	r30, r18
 d2a:	f1 1d       	adc	r31, r1
 d2c:	10 82       	st	Z, r1
 d2e:	80 e0       	ldi	r24, 0x00	; 0
 d30:	90 e0       	ldi	r25, 0x00	; 0
 d32:	29 96       	adiw	r28, 0x09	; 9
 d34:	ec e0       	ldi	r30, 0x0C	; 12
 d36:	0c 94 97 07 	jmp	0xf2e	; 0xf2e <__epilogue_restores__+0xc>

00000d3a <__ftoa_engine>:
 d3a:	28 30       	cpi	r18, 0x08	; 8
 d3c:	08 f0       	brcs	.+2      	; 0xd40 <__ftoa_engine+0x6>
 d3e:	27 e0       	ldi	r18, 0x07	; 7
 d40:	33 27       	eor	r19, r19
 d42:	da 01       	movw	r26, r20
 d44:	99 0f       	add	r25, r25
 d46:	31 1d       	adc	r19, r1
 d48:	87 fd       	sbrc	r24, 7
 d4a:	91 60       	ori	r25, 0x01	; 1
 d4c:	00 96       	adiw	r24, 0x00	; 0
 d4e:	61 05       	cpc	r22, r1
 d50:	71 05       	cpc	r23, r1
 d52:	39 f4       	brne	.+14     	; 0xd62 <__ftoa_engine+0x28>
 d54:	32 60       	ori	r19, 0x02	; 2
 d56:	2e 5f       	subi	r18, 0xFE	; 254
 d58:	3d 93       	st	X+, r19
 d5a:	30 e3       	ldi	r19, 0x30	; 48
 d5c:	2a 95       	dec	r18
 d5e:	e1 f7       	brne	.-8      	; 0xd58 <__ftoa_engine+0x1e>
 d60:	08 95       	ret
 d62:	9f 3f       	cpi	r25, 0xFF	; 255
 d64:	30 f0       	brcs	.+12     	; 0xd72 <__ftoa_engine+0x38>
 d66:	80 38       	cpi	r24, 0x80	; 128
 d68:	71 05       	cpc	r23, r1
 d6a:	61 05       	cpc	r22, r1
 d6c:	09 f0       	breq	.+2      	; 0xd70 <__ftoa_engine+0x36>
 d6e:	3c 5f       	subi	r19, 0xFC	; 252
 d70:	3c 5f       	subi	r19, 0xFC	; 252
 d72:	3d 93       	st	X+, r19
 d74:	91 30       	cpi	r25, 0x01	; 1
 d76:	08 f0       	brcs	.+2      	; 0xd7a <__ftoa_engine+0x40>
 d78:	80 68       	ori	r24, 0x80	; 128
 d7a:	91 1d       	adc	r25, r1
 d7c:	df 93       	push	r29
 d7e:	cf 93       	push	r28
 d80:	1f 93       	push	r17
 d82:	0f 93       	push	r16
 d84:	ff 92       	push	r15
 d86:	ef 92       	push	r14
 d88:	19 2f       	mov	r17, r25
 d8a:	98 7f       	andi	r25, 0xF8	; 248
 d8c:	96 95       	lsr	r25
 d8e:	e9 2f       	mov	r30, r25
 d90:	96 95       	lsr	r25
 d92:	96 95       	lsr	r25
 d94:	e9 0f       	add	r30, r25
 d96:	ff 27       	eor	r31, r31
 d98:	e2 55       	subi	r30, 0x52	; 82
 d9a:	ff 4f       	sbci	r31, 0xFF	; 255
 d9c:	99 27       	eor	r25, r25
 d9e:	33 27       	eor	r19, r19
 da0:	ee 24       	eor	r14, r14
 da2:	ff 24       	eor	r15, r15
 da4:	a7 01       	movw	r20, r14
 da6:	e7 01       	movw	r28, r14
 da8:	05 90       	lpm	r0, Z+
 daa:	08 94       	sec
 dac:	07 94       	ror	r0
 dae:	28 f4       	brcc	.+10     	; 0xdba <__ftoa_engine+0x80>
 db0:	36 0f       	add	r19, r22
 db2:	e7 1e       	adc	r14, r23
 db4:	f8 1e       	adc	r15, r24
 db6:	49 1f       	adc	r20, r25
 db8:	51 1d       	adc	r21, r1
 dba:	66 0f       	add	r22, r22
 dbc:	77 1f       	adc	r23, r23
 dbe:	88 1f       	adc	r24, r24
 dc0:	99 1f       	adc	r25, r25
 dc2:	06 94       	lsr	r0
 dc4:	a1 f7       	brne	.-24     	; 0xdae <__ftoa_engine+0x74>
 dc6:	05 90       	lpm	r0, Z+
 dc8:	07 94       	ror	r0
 dca:	28 f4       	brcc	.+10     	; 0xdd6 <__ftoa_engine+0x9c>
 dcc:	e7 0e       	add	r14, r23
 dce:	f8 1e       	adc	r15, r24
 dd0:	49 1f       	adc	r20, r25
 dd2:	56 1f       	adc	r21, r22
 dd4:	c1 1d       	adc	r28, r1
 dd6:	77 0f       	add	r23, r23
 dd8:	88 1f       	adc	r24, r24
 dda:	99 1f       	adc	r25, r25
 ddc:	66 1f       	adc	r22, r22
 dde:	06 94       	lsr	r0
 de0:	a1 f7       	brne	.-24     	; 0xdca <__ftoa_engine+0x90>
 de2:	05 90       	lpm	r0, Z+
 de4:	07 94       	ror	r0
 de6:	28 f4       	brcc	.+10     	; 0xdf2 <__ftoa_engine+0xb8>
 de8:	f8 0e       	add	r15, r24
 dea:	49 1f       	adc	r20, r25
 dec:	56 1f       	adc	r21, r22
 dee:	c7 1f       	adc	r28, r23
 df0:	d1 1d       	adc	r29, r1
 df2:	88 0f       	add	r24, r24
 df4:	99 1f       	adc	r25, r25
 df6:	66 1f       	adc	r22, r22
 df8:	77 1f       	adc	r23, r23
 dfa:	06 94       	lsr	r0
 dfc:	a1 f7       	brne	.-24     	; 0xde6 <__ftoa_engine+0xac>
 dfe:	05 90       	lpm	r0, Z+
 e00:	07 94       	ror	r0
 e02:	20 f4       	brcc	.+8      	; 0xe0c <__ftoa_engine+0xd2>
 e04:	49 0f       	add	r20, r25
 e06:	56 1f       	adc	r21, r22
 e08:	c7 1f       	adc	r28, r23
 e0a:	d8 1f       	adc	r29, r24
 e0c:	99 0f       	add	r25, r25
 e0e:	66 1f       	adc	r22, r22
 e10:	77 1f       	adc	r23, r23
 e12:	88 1f       	adc	r24, r24
 e14:	06 94       	lsr	r0
 e16:	a9 f7       	brne	.-22     	; 0xe02 <__ftoa_engine+0xc8>
 e18:	84 91       	lpm	r24, Z
 e1a:	10 95       	com	r17
 e1c:	17 70       	andi	r17, 0x07	; 7
 e1e:	41 f0       	breq	.+16     	; 0xe30 <__ftoa_engine+0xf6>
 e20:	d6 95       	lsr	r29
 e22:	c7 95       	ror	r28
 e24:	57 95       	ror	r21
 e26:	47 95       	ror	r20
 e28:	f7 94       	ror	r15
 e2a:	e7 94       	ror	r14
 e2c:	1a 95       	dec	r17
 e2e:	c1 f7       	brne	.-16     	; 0xe20 <__ftoa_engine+0xe6>
 e30:	e4 e5       	ldi	r30, 0x54	; 84
 e32:	f0 e0       	ldi	r31, 0x00	; 0
 e34:	68 94       	set
 e36:	15 90       	lpm	r1, Z+
 e38:	15 91       	lpm	r17, Z+
 e3a:	35 91       	lpm	r19, Z+
 e3c:	65 91       	lpm	r22, Z+
 e3e:	95 91       	lpm	r25, Z+
 e40:	05 90       	lpm	r0, Z+
 e42:	7f e2       	ldi	r23, 0x2F	; 47
 e44:	73 95       	inc	r23
 e46:	e1 18       	sub	r14, r1
 e48:	f1 0a       	sbc	r15, r17
 e4a:	43 0b       	sbc	r20, r19
 e4c:	56 0b       	sbc	r21, r22
 e4e:	c9 0b       	sbc	r28, r25
 e50:	d0 09       	sbc	r29, r0
 e52:	c0 f7       	brcc	.-16     	; 0xe44 <__ftoa_engine+0x10a>
 e54:	e1 0c       	add	r14, r1
 e56:	f1 1e       	adc	r15, r17
 e58:	43 1f       	adc	r20, r19
 e5a:	56 1f       	adc	r21, r22
 e5c:	c9 1f       	adc	r28, r25
 e5e:	d0 1d       	adc	r29, r0
 e60:	7e f4       	brtc	.+30     	; 0xe80 <__ftoa_engine+0x146>
 e62:	70 33       	cpi	r23, 0x30	; 48
 e64:	11 f4       	brne	.+4      	; 0xe6a <__ftoa_engine+0x130>
 e66:	8a 95       	dec	r24
 e68:	e6 cf       	rjmp	.-52     	; 0xe36 <__ftoa_engine+0xfc>
 e6a:	e8 94       	clt
 e6c:	01 50       	subi	r16, 0x01	; 1
 e6e:	30 f0       	brcs	.+12     	; 0xe7c <__ftoa_engine+0x142>
 e70:	08 0f       	add	r16, r24
 e72:	0a f4       	brpl	.+2      	; 0xe76 <__ftoa_engine+0x13c>
 e74:	00 27       	eor	r16, r16
 e76:	02 17       	cp	r16, r18
 e78:	08 f4       	brcc	.+2      	; 0xe7c <__ftoa_engine+0x142>
 e7a:	20 2f       	mov	r18, r16
 e7c:	23 95       	inc	r18
 e7e:	02 2f       	mov	r16, r18
 e80:	7a 33       	cpi	r23, 0x3A	; 58
 e82:	28 f0       	brcs	.+10     	; 0xe8e <__ftoa_engine+0x154>
 e84:	79 e3       	ldi	r23, 0x39	; 57
 e86:	7d 93       	st	X+, r23
 e88:	2a 95       	dec	r18
 e8a:	e9 f7       	brne	.-6      	; 0xe86 <__ftoa_engine+0x14c>
 e8c:	10 c0       	rjmp	.+32     	; 0xeae <__ftoa_engine+0x174>
 e8e:	7d 93       	st	X+, r23
 e90:	2a 95       	dec	r18
 e92:	89 f6       	brne	.-94     	; 0xe36 <__ftoa_engine+0xfc>
 e94:	06 94       	lsr	r0
 e96:	97 95       	ror	r25
 e98:	67 95       	ror	r22
 e9a:	37 95       	ror	r19
 e9c:	17 95       	ror	r17
 e9e:	17 94       	ror	r1
 ea0:	e1 18       	sub	r14, r1
 ea2:	f1 0a       	sbc	r15, r17
 ea4:	43 0b       	sbc	r20, r19
 ea6:	56 0b       	sbc	r21, r22
 ea8:	c9 0b       	sbc	r28, r25
 eaa:	d0 09       	sbc	r29, r0
 eac:	98 f0       	brcs	.+38     	; 0xed4 <__ftoa_engine+0x19a>
 eae:	23 95       	inc	r18
 eb0:	7e 91       	ld	r23, -X
 eb2:	73 95       	inc	r23
 eb4:	7a 33       	cpi	r23, 0x3A	; 58
 eb6:	08 f0       	brcs	.+2      	; 0xeba <__ftoa_engine+0x180>
 eb8:	70 e3       	ldi	r23, 0x30	; 48
 eba:	7c 93       	st	X, r23
 ebc:	20 13       	cpse	r18, r16
 ebe:	b8 f7       	brcc	.-18     	; 0xeae <__ftoa_engine+0x174>
 ec0:	7e 91       	ld	r23, -X
 ec2:	70 61       	ori	r23, 0x10	; 16
 ec4:	7d 93       	st	X+, r23
 ec6:	30 f0       	brcs	.+12     	; 0xed4 <__ftoa_engine+0x19a>
 ec8:	83 95       	inc	r24
 eca:	71 e3       	ldi	r23, 0x31	; 49
 ecc:	7d 93       	st	X+, r23
 ece:	70 e3       	ldi	r23, 0x30	; 48
 ed0:	2a 95       	dec	r18
 ed2:	e1 f7       	brne	.-8      	; 0xecc <__ftoa_engine+0x192>
 ed4:	11 24       	eor	r1, r1
 ed6:	ef 90       	pop	r14
 ed8:	ff 90       	pop	r15
 eda:	0f 91       	pop	r16
 edc:	1f 91       	pop	r17
 ede:	cf 91       	pop	r28
 ee0:	df 91       	pop	r29
 ee2:	99 27       	eor	r25, r25
 ee4:	87 fd       	sbrc	r24, 7
 ee6:	90 95       	com	r25
 ee8:	08 95       	ret

00000eea <__prologue_saves__>:
 eea:	2f 92       	push	r2
 eec:	3f 92       	push	r3
 eee:	4f 92       	push	r4
 ef0:	5f 92       	push	r5
 ef2:	6f 92       	push	r6
 ef4:	7f 92       	push	r7
 ef6:	8f 92       	push	r8
 ef8:	9f 92       	push	r9
 efa:	af 92       	push	r10
 efc:	bf 92       	push	r11
 efe:	cf 92       	push	r12
 f00:	df 92       	push	r13
 f02:	ef 92       	push	r14
 f04:	ff 92       	push	r15
 f06:	0f 93       	push	r16
 f08:	1f 93       	push	r17
 f0a:	cf 93       	push	r28
 f0c:	df 93       	push	r29
 f0e:	cd b7       	in	r28, 0x3d	; 61
 f10:	de b7       	in	r29, 0x3e	; 62
 f12:	ca 1b       	sub	r28, r26
 f14:	db 0b       	sbc	r29, r27
 f16:	0f b6       	in	r0, 0x3f	; 63
 f18:	f8 94       	cli
 f1a:	de bf       	out	0x3e, r29	; 62
 f1c:	0f be       	out	0x3f, r0	; 63
 f1e:	cd bf       	out	0x3d, r28	; 61
 f20:	09 94       	ijmp

00000f22 <__epilogue_restores__>:
 f22:	2a 88       	ldd	r2, Y+18	; 0x12
 f24:	39 88       	ldd	r3, Y+17	; 0x11
 f26:	48 88       	ldd	r4, Y+16	; 0x10
 f28:	5f 84       	ldd	r5, Y+15	; 0x0f
 f2a:	6e 84       	ldd	r6, Y+14	; 0x0e
 f2c:	7d 84       	ldd	r7, Y+13	; 0x0d
 f2e:	8c 84       	ldd	r8, Y+12	; 0x0c
 f30:	9b 84       	ldd	r9, Y+11	; 0x0b
 f32:	aa 84       	ldd	r10, Y+10	; 0x0a
 f34:	b9 84       	ldd	r11, Y+9	; 0x09
 f36:	c8 84       	ldd	r12, Y+8	; 0x08
 f38:	df 80       	ldd	r13, Y+7	; 0x07
 f3a:	ee 80       	ldd	r14, Y+6	; 0x06
 f3c:	fd 80       	ldd	r15, Y+5	; 0x05
 f3e:	0c 81       	ldd	r16, Y+4	; 0x04
 f40:	1b 81       	ldd	r17, Y+3	; 0x03
 f42:	aa 81       	ldd	r26, Y+2	; 0x02
 f44:	b9 81       	ldd	r27, Y+1	; 0x01
 f46:	ce 0f       	add	r28, r30
 f48:	d1 1d       	adc	r29, r1
 f4a:	0f b6       	in	r0, 0x3f	; 63
 f4c:	f8 94       	cli
 f4e:	de bf       	out	0x3e, r29	; 62
 f50:	0f be       	out	0x3f, r0	; 63
 f52:	cd bf       	out	0x3d, r28	; 61
 f54:	ed 01       	movw	r28, r26
 f56:	08 95       	ret

00000f58 <_exit>:
 f58:	f8 94       	cli

00000f5a <__stop_program>:
 f5a:	ff cf       	rjmp	.-2      	; 0xf5a <__stop_program>
