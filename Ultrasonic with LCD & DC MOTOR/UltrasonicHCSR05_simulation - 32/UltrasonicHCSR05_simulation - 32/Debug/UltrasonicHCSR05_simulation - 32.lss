
UltrasonicHCSR05_simulation - 32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b4a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  00000b4a  00000bde  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  0080007a  0080007a  00000bf8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000bf8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c28  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  00000c64  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c64  00000000  00000000  00000cd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007c7  00000000  00000000  00001938  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005b4  00000000  00000000  000020ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e4  00000000  00000000  000026b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004cc  00000000  00000000  00002798  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000523  00000000  00000000  00002c64  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00003187  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
   4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  24:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__vector_9>
  28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
  54:	00 40       	sbci	r16, 0x00	; 0
  56:	7a 10       	cpse	r7, r10
  58:	f3 5a       	subi	r31, 0xA3	; 163
  5a:	00 a0       	ldd	r0, Z+32	; 0x20
  5c:	72 4e       	sbci	r23, 0xE2	; 226
  5e:	18 09       	sbc	r17, r8
  60:	00 10       	cpse	r0, r0
  62:	a5 d4       	rcall	.+2378   	; 0x9ae <__ftoa_engine+0x86>
  64:	e8 00       	.word	0x00e8	; ????
  66:	00 e8       	ldi	r16, 0x80	; 128
  68:	76 48       	sbci	r23, 0x86	; 134
  6a:	17 00       	.word	0x0017	; ????
  6c:	00 e4       	ldi	r16, 0x40	; 64
  6e:	0b 54       	subi	r16, 0x4B	; 75
  70:	02 00       	.word	0x0002	; ????
  72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
  74:	9a 3b       	cpi	r25, 0xBA	; 186
  76:	00 00       	nop
  78:	00 e1       	ldi	r16, 0x10	; 16
  7a:	f5 05       	cpc	r31, r5
  7c:	00 00       	nop
  7e:	80 96       	adiw	r24, 0x20	; 32
  80:	98 00       	.word	0x0098	; ????
  82:	00 00       	nop
  84:	40 42       	sbci	r20, 0x20	; 32
  86:	0f 00       	.word	0x000f	; ????
  88:	00 00       	nop
  8a:	a0 86       	std	Z+8, r10	; 0x08
  8c:	01 00       	.word	0x0001	; ????
  8e:	00 00       	nop
  90:	10 27       	eor	r17, r16
  92:	00 00       	nop
  94:	00 00       	nop
  96:	e8 03       	fmulsu	r22, r16
  98:	00 00       	nop
  9a:	00 00       	nop
  9c:	64 00       	.word	0x0064	; ????
  9e:	00 00       	nop
  a0:	00 00       	nop
  a2:	0a 00       	.word	0x000a	; ????
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	01 00       	.word	0x0001	; ????
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	2c 76       	andi	r18, 0x6C	; 108
  b0:	d8 88       	ldd	r13, Y+16	; 0x10
  b2:	dc 67       	ori	r29, 0x7C	; 124
  b4:	4f 08       	sbc	r4, r15
  b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
  b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
  ba:	ae 59       	subi	r26, 0x9E	; 158
  bc:	e1 b1       	in	r30, 0x01	; 1
  be:	b7 96       	adiw	r30, 0x27	; 39
  c0:	e5 e3       	ldi	r30, 0x35	; 53
  c2:	e4 53       	subi	r30, 0x34	; 52
  c4:	c6 3a       	cpi	r28, 0xA6	; 166
  c6:	e6 51       	subi	r30, 0x16	; 22
  c8:	99 76       	andi	r25, 0x69	; 105
  ca:	96 e8       	ldi	r25, 0x86	; 134
  cc:	e6 c2       	rjmp	.+1484   	; 0x69a <dtoa_prf+0x26>
  ce:	84 26       	eor	r8, r20
  d0:	eb 89       	ldd	r30, Y+19	; 0x13
  d2:	8c 9b       	sbis	0x11, 4	; 17
  d4:	62 ed       	ldi	r22, 0xD2	; 210
  d6:	40 7c       	andi	r20, 0xC0	; 192
  d8:	6f fc       	.word	0xfc6f	; ????
  da:	ef bc       	out	0x2f, r14	; 47
  dc:	9c 9f       	mul	r25, r28
  de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
  e0:	ba a5       	ldd	r27, Y+42	; 0x2a
  e2:	6f a5       	ldd	r22, Y+47	; 0x2f
  e4:	f4 90       	lpm	r15, Z
  e6:	05 5a       	subi	r16, 0xA5	; 165
  e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
  ea:	5c 93       	st	X, r21
  ec:	6b 6c       	ori	r22, 0xCB	; 203
  ee:	f9 67       	ori	r31, 0x79	; 121
  f0:	6d c1       	rjmp	.+730    	; 0x3cc <main+0x144>
  f2:	1b fc       	.word	0xfc1b	; ????
  f4:	e0 e4       	ldi	r30, 0x40	; 64
  f6:	0d 47       	sbci	r16, 0x7D	; 125
  f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
  fa:	20 e6       	ldi	r18, 0x60	; 96
  fc:	b5 00       	.word	0x00b5	; ????
  fe:	d0 ed       	ldi	r29, 0xD0	; 208
 100:	90 2e       	mov	r9, r16
 102:	03 00       	.word	0x0003	; ????
 104:	94 35       	cpi	r25, 0x54	; 84
 106:	77 05       	cpc	r23, r7
 108:	00 80       	ld	r0, Z
 10a:	84 1e       	adc	r8, r20
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 20       	and	r0, r0
 110:	4e 0a       	sbc	r4, r30
 112:	00 00       	nop
 114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
 116:	0c 33       	cpi	r16, 0x3C	; 60
 118:	33 33       	cpi	r19, 0x33	; 51
 11a:	33 0f       	add	r19, r19
 11c:	98 6e       	ori	r25, 0xE8	; 232
 11e:	12 83       	std	Z+2, r17	; 0x02
 120:	11 41       	sbci	r17, 0x11	; 17
 122:	ef 8d       	ldd	r30, Y+31	; 0x1f
 124:	21 14       	cp	r2, r1
 126:	89 3b       	cpi	r24, 0xB9	; 185
 128:	e6 55       	subi	r30, 0x56	; 86
 12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
 12c:	fe e6       	ldi	r31, 0x6E	; 110
 12e:	db 18       	sub	r13, r11
 130:	d1 84       	ldd	r13, Z+9	; 0x09
 132:	4b 38       	cpi	r20, 0x8B	; 139
 134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
 136:	7c 1d       	adc	r23, r12
 138:	90 1d       	adc	r25, r0
 13a:	a4 bb       	out	0x14, r26	; 20
 13c:	e4 24       	eor	r14, r4
 13e:	20 32       	cpi	r18, 0x20	; 32
 140:	84 72       	andi	r24, 0x24	; 36
 142:	5e 22       	and	r5, r30
 144:	81 00       	.word	0x0081	; ????
 146:	c9 f1       	breq	.+114    	; 0x1ba <LCD_Char+0xc>
 148:	24 ec       	ldi	r18, 0xC4	; 196
 14a:	a1 e5       	ldi	r26, 0x51	; 81
 14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
 14e:	11 24       	eor	r1, r1
 150:	1f be       	out	0x3f, r1	; 63
 152:	cf e5       	ldi	r28, 0x5F	; 95
 154:	d8 e0       	ldi	r29, 0x08	; 8
 156:	de bf       	out	0x3e, r29	; 62
 158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
 15a:	10 e0       	ldi	r17, 0x00	; 0
 15c:	a0 e6       	ldi	r26, 0x60	; 96
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	ea e4       	ldi	r30, 0x4A	; 74
 162:	fb e0       	ldi	r31, 0x0B	; 11
 164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
 166:	05 90       	lpm	r0, Z+
 168:	0d 92       	st	X+, r0
 16a:	aa 37       	cpi	r26, 0x7A	; 122
 16c:	b1 07       	cpc	r27, r17
 16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
 170:	20 e0       	ldi	r18, 0x00	; 0
 172:	aa e7       	ldi	r26, 0x7A	; 122
 174:	b0 e0       	ldi	r27, 0x00	; 0
 176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
 178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
 17a:	ac 37       	cpi	r26, 0x7C	; 124
 17c:	b2 07       	cpc	r27, r18
 17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
 180:	0e 94 44 01 	call	0x288	; 0x288 <main>
 184:	0c 94 a3 05 	jmp	0xb46	; 0xb46 <_exit>

00000188 <__bad_interrupt>:
 188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <LCD_Command>:
 18c:	88 bb       	out	0x18, r24	; 24
 18e:	85 b3       	in	r24, 0x15	; 21
 190:	8c 7f       	andi	r24, 0xFC	; 252
 192:	85 bb       	out	0x15, r24	; 21
 194:	aa 9a       	sbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 196:	85 e0       	ldi	r24, 0x05	; 5
 198:	8a 95       	dec	r24
 19a:	f1 f7       	brne	.-4      	; 0x198 <LCD_Command+0xc>
 19c:	00 00       	nop
 19e:	aa 98       	cbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1a0:	8f ed       	ldi	r24, 0xDF	; 223
 1a2:	9e e2       	ldi	r25, 0x2E	; 46
 1a4:	01 97       	sbiw	r24, 0x01	; 1
 1a6:	f1 f7       	brne	.-4      	; 0x1a4 <LCD_Command+0x18>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <LCD_Command+0x1e>
 1aa:	00 00       	nop
 1ac:	08 95       	ret

000001ae <LCD_Char>:
 1ae:	88 bb       	out	0x18, r24	; 24
 1b0:	a9 98       	cbi	0x15, 1	; 21
 1b2:	85 b3       	in	r24, 0x15	; 21
 1b4:	85 60       	ori	r24, 0x05	; 5
 1b6:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b8:	85 e0       	ldi	r24, 0x05	; 5
 1ba:	8a 95       	dec	r24
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <LCD_Char+0xc>
 1be:	00 00       	nop
 1c0:	aa 98       	cbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c2:	8f e9       	ldi	r24, 0x9F	; 159
 1c4:	9f e0       	ldi	r25, 0x0F	; 15
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <LCD_Char+0x18>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <LCD_Char+0x1e>
 1cc:	00 00       	nop
 1ce:	08 95       	ret

000001d0 <LCD_Init>:
 1d0:	84 b3       	in	r24, 0x14	; 20
 1d2:	87 60       	ori	r24, 0x07	; 7
 1d4:	84 bb       	out	0x14, r24	; 20
 1d6:	8f ef       	ldi	r24, 0xFF	; 255
 1d8:	87 bb       	out	0x17, r24	; 23
 1da:	2f ef       	ldi	r18, 0xFF	; 255
 1dc:	89 ef       	ldi	r24, 0xF9	; 249
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	21 50       	subi	r18, 0x01	; 1
 1e2:	80 40       	sbci	r24, 0x00	; 0
 1e4:	90 40       	sbci	r25, 0x00	; 0
 1e6:	e1 f7       	brne	.-8      	; 0x1e0 <LCD_Init+0x10>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <LCD_Init+0x1a>
 1ea:	00 00       	nop
 1ec:	88 e3       	ldi	r24, 0x38	; 56
 1ee:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
 1f2:	8c e0       	ldi	r24, 0x0C	; 12
 1f4:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
 1f8:	86 e0       	ldi	r24, 0x06	; 6
 1fa:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
 204:	80 e8       	ldi	r24, 0x80	; 128
 206:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
 20a:	08 95       	ret

0000020c <LCD_String>:
 20c:	cf 93       	push	r28
 20e:	df 93       	push	r29
 210:	ec 01       	movw	r28, r24
 212:	88 81       	ld	r24, Y
 214:	88 23       	and	r24, r24
 216:	31 f0       	breq	.+12     	; 0x224 <LCD_String+0x18>
 218:	21 96       	adiw	r28, 0x01	; 1
 21a:	0e 94 d7 00 	call	0x1ae	; 0x1ae <LCD_Char>
 21e:	89 91       	ld	r24, Y+
 220:	81 11       	cpse	r24, r1
 222:	fb cf       	rjmp	.-10     	; 0x21a <LCD_String+0xe>
 224:	df 91       	pop	r29
 226:	cf 91       	pop	r28
 228:	08 95       	ret

0000022a <LCD_String_xy>:
 22a:	cf 93       	push	r28
 22c:	df 93       	push	r29
 22e:	ea 01       	movw	r28, r20
 230:	81 30       	cpi	r24, 0x01	; 1
 232:	31 f4       	brne	.+12     	; 0x240 <LCD_String_xy+0x16>
 234:	86 2f       	mov	r24, r22
 236:	8f 70       	andi	r24, 0x0F	; 15
 238:	80 68       	ori	r24, 0x80	; 128
 23a:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
 23e:	07 c0       	rjmp	.+14     	; 0x24e <LCD_String_xy+0x24>
 240:	82 30       	cpi	r24, 0x02	; 2
 242:	29 f4       	brne	.+10     	; 0x24e <LCD_String_xy+0x24>
 244:	86 2f       	mov	r24, r22
 246:	8f 70       	andi	r24, 0x0F	; 15
 248:	80 6c       	ori	r24, 0xC0	; 192
 24a:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Command>
 24e:	ce 01       	movw	r24, r28
 250:	0e 94 06 01 	call	0x20c	; 0x20c <LCD_String>
 254:	df 91       	pop	r29
 256:	cf 91       	pop	r28
 258:	08 95       	ret

0000025a <__vector_9>:


int TimerOverflow = 0;

ISR(TIMER1_OVF_vect)
{
 25a:	1f 92       	push	r1
 25c:	0f 92       	push	r0
 25e:	0f b6       	in	r0, 0x3f	; 63
 260:	0f 92       	push	r0
 262:	11 24       	eor	r1, r1
 264:	8f 93       	push	r24
 266:	9f 93       	push	r25
	TimerOverflow++;		/* Increment Timer Overflow count */
 268:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__data_end>
 26c:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <__data_end+0x1>
 270:	01 96       	adiw	r24, 0x01	; 1
 272:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__data_end+0x1>
 276:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__data_end>
}
 27a:	9f 91       	pop	r25
 27c:	8f 91       	pop	r24
 27e:	0f 90       	pop	r0
 280:	0f be       	out	0x3f, r0	; 63
 282:	0f 90       	pop	r0
 284:	1f 90       	pop	r1
 286:	18 95       	reti

00000288 <main>:

int main(void)
{
 288:	cf 93       	push	r28
 28a:	df 93       	push	r29
 28c:	cd b7       	in	r28, 0x3d	; 61
 28e:	de b7       	in	r29, 0x3e	; 62
 290:	2a 97       	sbiw	r28, 0x0a	; 10
 292:	0f b6       	in	r0, 0x3f	; 63
 294:	f8 94       	cli
 296:	de bf       	out	0x3e, r29	; 62
 298:	0f be       	out	0x3f, r0	; 63
 29a:	cd bf       	out	0x3d, r28	; 61
	char string[10];
	long count;
	double distance;
	
	DDRA = 0x01;			/* Make trigger pin as output */
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	8a bb       	out	0x1a, r24	; 26
	PORTD = 0xFF;			/* Turn on Pull-up */
 2a0:	8f ef       	ldi	r24, 0xFF	; 255
 2a2:	82 bb       	out	0x12, r24	; 18
	
	LCD_Init();
 2a4:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCD_Init>
	LCD_String_xy(1, 0, "Ultrasonic");
 2a8:	40 e6       	ldi	r20, 0x60	; 96
 2aa:	50 e0       	ldi	r21, 0x00	; 0
 2ac:	60 e0       	ldi	r22, 0x00	; 0
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	0e 94 15 01 	call	0x22a	; 0x22a <LCD_String_xy>
	
	sei();					/* Enable global interrupt */
 2b4:	78 94       	sei
	TIMSK = (1 << TOIE1);	/* Enable Timer1 overflow interrupts */
 2b6:	84 e0       	ldi	r24, 0x04	; 4
 2b8:	89 bf       	out	0x39, r24	; 57
	TCCR1A = 0;				/* Set all bit to zero Normal operation */
 2ba:	1f bc       	out	0x2f, r1	; 47
	
	// MOTOR
	DDRC =DDRC | (1 << MO1_I1)| (1 << MO1_I2)| (1 << MO2_I1)| (1 << MO2_I2);
 2bc:	84 b3       	in	r24, 0x14	; 20
 2be:	80 6f       	ori	r24, 0xF0	; 240
 2c0:	84 bb       	out	0x14, r24	; 20
		PORTA |= (1 << Trigger_pin);/* Give 10us trigger pulse on trig. pin to HC-SR04 */
		_delay_us(10);
		PORTA &= (~(1 << Trigger_pin));
		
		TCNT1 = 0;			/* Clear Timer counter */
		TCCR1B = 0x41;		/* Setting for capture rising edge, No pre-scaler*/
 2c2:	0f 2e       	mov	r0, r31
 2c4:	f1 e4       	ldi	r31, 0x41	; 65
 2c6:	af 2e       	mov	r10, r31
 2c8:	f0 2d       	mov	r31, r0
		TIFR = 1<<ICF1;		/* Clear ICP flag (Input Capture flag) */
 2ca:	68 94       	set
 2cc:	cc 24       	eor	r12, r12
 2ce:	c5 f8       	bld	r12, 5
		TIFR = 1<<TOV1;		/* Clear Timer Overflow flag */
 2d0:	68 94       	set
 2d2:	dd 24       	eor	r13, r13
 2d4:	d2 f8       	bld	r13, 2

		/*Calculate width of Echo by Input Capture (ICP) on PortD PD6 */
		
		while ((TIFR & (1 << ICF1)) == 0);	/* Wait for rising edge */
		TCNT1 = 0;			/* Clear Timer counter */
		TCCR1B = 0x01;		/* Setting for capture falling edge, No pre-scaler */
 2d6:	bb 24       	eor	r11, r11
 2d8:	b3 94       	inc	r11

			_delay_ms(3000);    //delay of 3 sec
			
		}

		dtostrf(distance, 2, 2, string);/* Convert distance into string */
 2da:	ce 01       	movw	r24, r28
 2dc:	01 96       	adiw	r24, 0x01	; 1
 2de:	7c 01       	movw	r14, r24
	DDRC =DDRC | (1 << MO1_I1)| (1 << MO1_I2)| (1 << MO2_I1)| (1 << MO2_I2);

	while(1)
	{

		PORTA |= (1 << Trigger_pin);/* Give 10us trigger pulse on trig. pin to HC-SR04 */
 2e0:	d8 9a       	sbi	0x1b, 0	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2e2:	95 e3       	ldi	r25, 0x35	; 53
 2e4:	9a 95       	dec	r25
 2e6:	f1 f7       	brne	.-4      	; 0x2e4 <main+0x5c>
 2e8:	00 00       	nop
		_delay_us(10);
		PORTA &= (~(1 << Trigger_pin));
 2ea:	d8 98       	cbi	0x1b, 0	; 27
		
		TCNT1 = 0;			/* Clear Timer counter */
 2ec:	1d bc       	out	0x2d, r1	; 45
 2ee:	1c bc       	out	0x2c, r1	; 44
		TCCR1B = 0x41;		/* Setting for capture rising edge, No pre-scaler*/
 2f0:	ae bc       	out	0x2e, r10	; 46
		TIFR = 1<<ICF1;		/* Clear ICP flag (Input Capture flag) */
 2f2:	c8 be       	out	0x38, r12	; 56
		TIFR = 1<<TOV1;		/* Clear Timer Overflow flag */
 2f4:	d8 be       	out	0x38, r13	; 56

		/*Calculate width of Echo by Input Capture (ICP) on PortD PD6 */
		
		while ((TIFR & (1 << ICF1)) == 0);	/* Wait for rising edge */
 2f6:	08 b6       	in	r0, 0x38	; 56
 2f8:	05 fe       	sbrs	r0, 5
 2fa:	fd cf       	rjmp	.-6      	; 0x2f6 <main+0x6e>
		TCNT1 = 0;			/* Clear Timer counter */
 2fc:	1d bc       	out	0x2d, r1	; 45
 2fe:	1c bc       	out	0x2c, r1	; 44
		TCCR1B = 0x01;		/* Setting for capture falling edge, No pre-scaler */
 300:	be bc       	out	0x2e, r11	; 46
		TIFR = 1<<ICF1;		/* Clear ICP flag (Input Capture flag) */
 302:	c8 be       	out	0x38, r12	; 56
		TIFR = 1<<TOV1;		/* Clear Timer Overflow flag */
 304:	d8 be       	out	0x38, r13	; 56
		TimerOverflow = 0;	/* Clear Timer overflow count */
 306:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__data_end+0x1>
 30a:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__data_end>

		while ((TIFR & (1 << ICF1)) == 0); /* Wait for falling edge */
 30e:	08 b6       	in	r0, 0x38	; 56
 310:	05 fe       	sbrs	r0, 5
 312:	fd cf       	rjmp	.-6      	; 0x30e <main+0x86>
		count = ICR1 + (65535 * TimerOverflow);	/* Take value of capture register */
 314:	66 b5       	in	r22, 0x26	; 38
 316:	77 b5       	in	r23, 0x27	; 39
		/* 8MHz Timer freq, sound speed =343 m/s, calculation mentioned in doc. */
		distance = (double)count / (466.47);
 318:	80 e0       	ldi	r24, 0x00	; 0
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	0e 94 65 02 	call	0x4ca	; 0x4ca <__floatsisf>
 320:	29 e2       	ldi	r18, 0x29	; 41
 322:	3c e3       	ldi	r19, 0x3C	; 60
 324:	49 ee       	ldi	r20, 0xE9	; 233
 326:	53 e4       	ldi	r21, 0x43	; 67
 328:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__divsf3>
 32c:	2b 01       	movw	r4, r22
 32e:	3c 01       	movw	r6, r24
		//distance = (double)count / 100; // 5280, 5440
		
		if (distance > 20){
 330:	20 e0       	ldi	r18, 0x00	; 0
 332:	30 e0       	ldi	r19, 0x00	; 0
 334:	40 ea       	ldi	r20, 0xA0	; 160
 336:	51 e4       	ldi	r21, 0x41	; 65
 338:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__gesf2>
 33c:	18 16       	cp	r1, r24
 33e:	24 f4       	brge	.+8      	; 0x348 <main+0xc0>
			PORTC = PORTC |(1 << MO1_I2)|(1 << MO2_I2); // motor rotation in clockwise direction
 340:	85 b3       	in	r24, 0x15	; 21
 342:	80 66       	ori	r24, 0x60	; 96
 344:	85 bb       	out	0x15, r24	; 21
 346:	25 c0       	rjmp	.+74     	; 0x392 <main+0x10a>
			
			
		}
		
		else {
			PORTC =PORTC & ~(1 << MO1_I2) & ~(1 << MO1_I2);
 348:	ad 98       	cbi	0x15, 5	; 21
			PORTC = PORTC |(1 << MO1_I1)|(1 << MO2_I1); //motor rotation in anticlockwise direction
 34a:	85 b3       	in	r24, 0x15	; 21
 34c:	80 69       	ori	r24, 0x90	; 144
 34e:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 350:	2f ef       	ldi	r18, 0xFF	; 255
 352:	8b e7       	ldi	r24, 0x7B	; 123
 354:	92 e9       	ldi	r25, 0x92	; 146
 356:	21 50       	subi	r18, 0x01	; 1
 358:	80 40       	sbci	r24, 0x00	; 0
 35a:	90 40       	sbci	r25, 0x00	; 0
 35c:	e1 f7       	brne	.-8      	; 0x356 <main+0xce>
 35e:	00 c0       	rjmp	.+0      	; 0x360 <main+0xd8>
 360:	00 00       	nop

			_delay_ms(3000);    //delay of 3 sec
			PORTC =PORTC & ~(1 << MO1_I1) & ~(1 << MO2_I1);
 362:	85 b3       	in	r24, 0x15	; 21
 364:	8f 76       	andi	r24, 0x6F	; 111
 366:	85 bb       	out	0x15, r24	; 21
 368:	2f ef       	ldi	r18, 0xFF	; 255
 36a:	83 ed       	ldi	r24, 0xD3	; 211
 36c:	90 e3       	ldi	r25, 0x30	; 48
 36e:	21 50       	subi	r18, 0x01	; 1
 370:	80 40       	sbci	r24, 0x00	; 0
 372:	90 40       	sbci	r25, 0x00	; 0
 374:	e1 f7       	brne	.-8      	; 0x36e <main+0xe6>
 376:	00 c0       	rjmp	.+0      	; 0x378 <main+0xf0>
 378:	00 00       	nop

			_delay_ms(1000);    //delay of 1 sec
			
			PORTC = PORTC |(1 << MO1_I1)|(1 << MO2_I2); //motor rotation FOR ROTATE;
 37a:	85 b3       	in	r24, 0x15	; 21
 37c:	80 65       	ori	r24, 0x50	; 80
 37e:	85 bb       	out	0x15, r24	; 21
 380:	2f ef       	ldi	r18, 0xFF	; 255
 382:	8b e7       	ldi	r24, 0x7B	; 123
 384:	92 e9       	ldi	r25, 0x92	; 146
 386:	21 50       	subi	r18, 0x01	; 1
 388:	80 40       	sbci	r24, 0x00	; 0
 38a:	90 40       	sbci	r25, 0x00	; 0
 38c:	e1 f7       	brne	.-8      	; 0x386 <main+0xfe>
 38e:	00 c0       	rjmp	.+0      	; 0x390 <main+0x108>
 390:	00 00       	nop

			_delay_ms(3000);    //delay of 3 sec
			
		}

		dtostrf(distance, 2, 2, string);/* Convert distance into string */
 392:	87 01       	movw	r16, r14
 394:	22 e0       	ldi	r18, 0x02	; 2
 396:	42 e0       	ldi	r20, 0x02	; 2
 398:	c3 01       	movw	r24, r6
 39a:	b2 01       	movw	r22, r4
 39c:	0e 94 1a 03 	call	0x634	; 0x634 <dtostrf>
		strcat(string, " cm   ");
 3a0:	d7 01       	movw	r26, r14
 3a2:	0d 90       	ld	r0, X+
 3a4:	00 20       	and	r0, r0
 3a6:	e9 f7       	brne	.-6      	; 0x3a2 <main+0x11a>
 3a8:	11 97       	sbiw	r26, 0x01	; 1
 3aa:	87 e0       	ldi	r24, 0x07	; 7
 3ac:	eb e6       	ldi	r30, 0x6B	; 107
 3ae:	f0 e0       	ldi	r31, 0x00	; 0
 3b0:	01 90       	ld	r0, Z+
 3b2:	0d 92       	st	X+, r0
 3b4:	8a 95       	dec	r24
 3b6:	e1 f7       	brne	.-8      	; 0x3b0 <main+0x128>
		LCD_String_xy(2, 0, "Dist = ");
 3b8:	42 e7       	ldi	r20, 0x72	; 114
 3ba:	50 e0       	ldi	r21, 0x00	; 0
 3bc:	60 e0       	ldi	r22, 0x00	; 0
 3be:	82 e0       	ldi	r24, 0x02	; 2
 3c0:	0e 94 15 01 	call	0x22a	; 0x22a <LCD_String_xy>
		LCD_String_xy(2, 7, string);	/* Print distance on LDC16x2 */
 3c4:	a7 01       	movw	r20, r14
 3c6:	67 e0       	ldi	r22, 0x07	; 7
 3c8:	82 e0       	ldi	r24, 0x02	; 2
 3ca:	0e 94 15 01 	call	0x22a	; 0x22a <LCD_String_xy>
 3ce:	2f ef       	ldi	r18, 0xFF	; 255
 3d0:	83 ec       	ldi	r24, 0xC3	; 195
 3d2:	99 e0       	ldi	r25, 0x09	; 9
 3d4:	21 50       	subi	r18, 0x01	; 1
 3d6:	80 40       	sbci	r24, 0x00	; 0
 3d8:	90 40       	sbci	r25, 0x00	; 0
 3da:	e1 f7       	brne	.-8      	; 0x3d4 <main+0x14c>
 3dc:	00 c0       	rjmp	.+0      	; 0x3de <main+0x156>
 3de:	00 00       	nop
 3e0:	7f cf       	rjmp	.-258    	; 0x2e0 <main+0x58>

000003e2 <__divsf3>:
 3e2:	0e 94 05 02 	call	0x40a	; 0x40a <__divsf3x>
 3e6:	0c 94 b7 02 	jmp	0x56e	; 0x56e <__fp_round>
 3ea:	0e 94 b0 02 	call	0x560	; 0x560 <__fp_pscB>
 3ee:	58 f0       	brcs	.+22     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3f0:	0e 94 a9 02 	call	0x552	; 0x552 <__fp_pscA>
 3f4:	40 f0       	brcs	.+16     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3f6:	29 f4       	brne	.+10     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f8:	5f 3f       	cpi	r21, 0xFF	; 255
 3fa:	29 f0       	breq	.+10     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3fc:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>
 400:	51 11       	cpse	r21, r1
 402:	0c 94 eb 02 	jmp	0x5d6	; 0x5d6 <__fp_szero>
 406:	0c 94 a6 02 	jmp	0x54c	; 0x54c <__fp_nan>

0000040a <__divsf3x>:
 40a:	0e 94 c8 02 	call	0x590	; 0x590 <__fp_split3>
 40e:	68 f3       	brcs	.-38     	; 0x3ea <__divsf3+0x8>

00000410 <__divsf3_pse>:
 410:	99 23       	and	r25, r25
 412:	b1 f3       	breq	.-20     	; 0x400 <__LOCK_REGION_LENGTH__>
 414:	55 23       	and	r21, r21
 416:	91 f3       	breq	.-28     	; 0x3fc <__divsf3+0x1a>
 418:	95 1b       	sub	r25, r21
 41a:	55 0b       	sbc	r21, r21
 41c:	bb 27       	eor	r27, r27
 41e:	aa 27       	eor	r26, r26
 420:	62 17       	cp	r22, r18
 422:	73 07       	cpc	r23, r19
 424:	84 07       	cpc	r24, r20
 426:	38 f0       	brcs	.+14     	; 0x436 <__divsf3_pse+0x26>
 428:	9f 5f       	subi	r25, 0xFF	; 255
 42a:	5f 4f       	sbci	r21, 0xFF	; 255
 42c:	22 0f       	add	r18, r18
 42e:	33 1f       	adc	r19, r19
 430:	44 1f       	adc	r20, r20
 432:	aa 1f       	adc	r26, r26
 434:	a9 f3       	breq	.-22     	; 0x420 <__divsf3_pse+0x10>
 436:	35 d0       	rcall	.+106    	; 0x4a2 <__divsf3_pse+0x92>
 438:	0e 2e       	mov	r0, r30
 43a:	3a f0       	brmi	.+14     	; 0x44a <__divsf3_pse+0x3a>
 43c:	e0 e8       	ldi	r30, 0x80	; 128
 43e:	32 d0       	rcall	.+100    	; 0x4a4 <__divsf3_pse+0x94>
 440:	91 50       	subi	r25, 0x01	; 1
 442:	50 40       	sbci	r21, 0x00	; 0
 444:	e6 95       	lsr	r30
 446:	00 1c       	adc	r0, r0
 448:	ca f7       	brpl	.-14     	; 0x43c <__divsf3_pse+0x2c>
 44a:	2b d0       	rcall	.+86     	; 0x4a2 <__divsf3_pse+0x92>
 44c:	fe 2f       	mov	r31, r30
 44e:	29 d0       	rcall	.+82     	; 0x4a2 <__divsf3_pse+0x92>
 450:	66 0f       	add	r22, r22
 452:	77 1f       	adc	r23, r23
 454:	88 1f       	adc	r24, r24
 456:	bb 1f       	adc	r27, r27
 458:	26 17       	cp	r18, r22
 45a:	37 07       	cpc	r19, r23
 45c:	48 07       	cpc	r20, r24
 45e:	ab 07       	cpc	r26, r27
 460:	b0 e8       	ldi	r27, 0x80	; 128
 462:	09 f0       	breq	.+2      	; 0x466 <__divsf3_pse+0x56>
 464:	bb 0b       	sbc	r27, r27
 466:	80 2d       	mov	r24, r0
 468:	bf 01       	movw	r22, r30
 46a:	ff 27       	eor	r31, r31
 46c:	93 58       	subi	r25, 0x83	; 131
 46e:	5f 4f       	sbci	r21, 0xFF	; 255
 470:	3a f0       	brmi	.+14     	; 0x480 <__divsf3_pse+0x70>
 472:	9e 3f       	cpi	r25, 0xFE	; 254
 474:	51 05       	cpc	r21, r1
 476:	78 f0       	brcs	.+30     	; 0x496 <__divsf3_pse+0x86>
 478:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>
 47c:	0c 94 eb 02 	jmp	0x5d6	; 0x5d6 <__fp_szero>
 480:	5f 3f       	cpi	r21, 0xFF	; 255
 482:	e4 f3       	brlt	.-8      	; 0x47c <__divsf3_pse+0x6c>
 484:	98 3e       	cpi	r25, 0xE8	; 232
 486:	d4 f3       	brlt	.-12     	; 0x47c <__divsf3_pse+0x6c>
 488:	86 95       	lsr	r24
 48a:	77 95       	ror	r23
 48c:	67 95       	ror	r22
 48e:	b7 95       	ror	r27
 490:	f7 95       	ror	r31
 492:	9f 5f       	subi	r25, 0xFF	; 255
 494:	c9 f7       	brne	.-14     	; 0x488 <__divsf3_pse+0x78>
 496:	88 0f       	add	r24, r24
 498:	91 1d       	adc	r25, r1
 49a:	96 95       	lsr	r25
 49c:	87 95       	ror	r24
 49e:	97 f9       	bld	r25, 7
 4a0:	08 95       	ret
 4a2:	e1 e0       	ldi	r30, 0x01	; 1
 4a4:	66 0f       	add	r22, r22
 4a6:	77 1f       	adc	r23, r23
 4a8:	88 1f       	adc	r24, r24
 4aa:	bb 1f       	adc	r27, r27
 4ac:	62 17       	cp	r22, r18
 4ae:	73 07       	cpc	r23, r19
 4b0:	84 07       	cpc	r24, r20
 4b2:	ba 07       	cpc	r27, r26
 4b4:	20 f0       	brcs	.+8      	; 0x4be <__divsf3_pse+0xae>
 4b6:	62 1b       	sub	r22, r18
 4b8:	73 0b       	sbc	r23, r19
 4ba:	84 0b       	sbc	r24, r20
 4bc:	ba 0b       	sbc	r27, r26
 4be:	ee 1f       	adc	r30, r30
 4c0:	88 f7       	brcc	.-30     	; 0x4a4 <__divsf3_pse+0x94>
 4c2:	e0 95       	com	r30
 4c4:	08 95       	ret

000004c6 <__floatunsisf>:
 4c6:	e8 94       	clt
 4c8:	09 c0       	rjmp	.+18     	; 0x4dc <__floatsisf+0x12>

000004ca <__floatsisf>:
 4ca:	97 fb       	bst	r25, 7
 4cc:	3e f4       	brtc	.+14     	; 0x4dc <__floatsisf+0x12>
 4ce:	90 95       	com	r25
 4d0:	80 95       	com	r24
 4d2:	70 95       	com	r23
 4d4:	61 95       	neg	r22
 4d6:	7f 4f       	sbci	r23, 0xFF	; 255
 4d8:	8f 4f       	sbci	r24, 0xFF	; 255
 4da:	9f 4f       	sbci	r25, 0xFF	; 255
 4dc:	99 23       	and	r25, r25
 4de:	a9 f0       	breq	.+42     	; 0x50a <__floatsisf+0x40>
 4e0:	f9 2f       	mov	r31, r25
 4e2:	96 e9       	ldi	r25, 0x96	; 150
 4e4:	bb 27       	eor	r27, r27
 4e6:	93 95       	inc	r25
 4e8:	f6 95       	lsr	r31
 4ea:	87 95       	ror	r24
 4ec:	77 95       	ror	r23
 4ee:	67 95       	ror	r22
 4f0:	b7 95       	ror	r27
 4f2:	f1 11       	cpse	r31, r1
 4f4:	f8 cf       	rjmp	.-16     	; 0x4e6 <__floatsisf+0x1c>
 4f6:	fa f4       	brpl	.+62     	; 0x536 <__floatsisf+0x6c>
 4f8:	bb 0f       	add	r27, r27
 4fa:	11 f4       	brne	.+4      	; 0x500 <__floatsisf+0x36>
 4fc:	60 ff       	sbrs	r22, 0
 4fe:	1b c0       	rjmp	.+54     	; 0x536 <__floatsisf+0x6c>
 500:	6f 5f       	subi	r22, 0xFF	; 255
 502:	7f 4f       	sbci	r23, 0xFF	; 255
 504:	8f 4f       	sbci	r24, 0xFF	; 255
 506:	9f 4f       	sbci	r25, 0xFF	; 255
 508:	16 c0       	rjmp	.+44     	; 0x536 <__floatsisf+0x6c>
 50a:	88 23       	and	r24, r24
 50c:	11 f0       	breq	.+4      	; 0x512 <__floatsisf+0x48>
 50e:	96 e9       	ldi	r25, 0x96	; 150
 510:	11 c0       	rjmp	.+34     	; 0x534 <__floatsisf+0x6a>
 512:	77 23       	and	r23, r23
 514:	21 f0       	breq	.+8      	; 0x51e <__floatsisf+0x54>
 516:	9e e8       	ldi	r25, 0x8E	; 142
 518:	87 2f       	mov	r24, r23
 51a:	76 2f       	mov	r23, r22
 51c:	05 c0       	rjmp	.+10     	; 0x528 <__floatsisf+0x5e>
 51e:	66 23       	and	r22, r22
 520:	71 f0       	breq	.+28     	; 0x53e <__floatsisf+0x74>
 522:	96 e8       	ldi	r25, 0x86	; 134
 524:	86 2f       	mov	r24, r22
 526:	70 e0       	ldi	r23, 0x00	; 0
 528:	60 e0       	ldi	r22, 0x00	; 0
 52a:	2a f0       	brmi	.+10     	; 0x536 <__floatsisf+0x6c>
 52c:	9a 95       	dec	r25
 52e:	66 0f       	add	r22, r22
 530:	77 1f       	adc	r23, r23
 532:	88 1f       	adc	r24, r24
 534:	da f7       	brpl	.-10     	; 0x52c <__floatsisf+0x62>
 536:	88 0f       	add	r24, r24
 538:	96 95       	lsr	r25
 53a:	87 95       	ror	r24
 53c:	97 f9       	bld	r25, 7
 53e:	08 95       	ret

00000540 <__fp_inf>:
 540:	97 f9       	bld	r25, 7
 542:	9f 67       	ori	r25, 0x7F	; 127
 544:	80 e8       	ldi	r24, 0x80	; 128
 546:	70 e0       	ldi	r23, 0x00	; 0
 548:	60 e0       	ldi	r22, 0x00	; 0
 54a:	08 95       	ret

0000054c <__fp_nan>:
 54c:	9f ef       	ldi	r25, 0xFF	; 255
 54e:	80 ec       	ldi	r24, 0xC0	; 192
 550:	08 95       	ret

00000552 <__fp_pscA>:
 552:	00 24       	eor	r0, r0
 554:	0a 94       	dec	r0
 556:	16 16       	cp	r1, r22
 558:	17 06       	cpc	r1, r23
 55a:	18 06       	cpc	r1, r24
 55c:	09 06       	cpc	r0, r25
 55e:	08 95       	ret

00000560 <__fp_pscB>:
 560:	00 24       	eor	r0, r0
 562:	0a 94       	dec	r0
 564:	12 16       	cp	r1, r18
 566:	13 06       	cpc	r1, r19
 568:	14 06       	cpc	r1, r20
 56a:	05 06       	cpc	r0, r21
 56c:	08 95       	ret

0000056e <__fp_round>:
 56e:	09 2e       	mov	r0, r25
 570:	03 94       	inc	r0
 572:	00 0c       	add	r0, r0
 574:	11 f4       	brne	.+4      	; 0x57a <__fp_round+0xc>
 576:	88 23       	and	r24, r24
 578:	52 f0       	brmi	.+20     	; 0x58e <__fp_round+0x20>
 57a:	bb 0f       	add	r27, r27
 57c:	40 f4       	brcc	.+16     	; 0x58e <__fp_round+0x20>
 57e:	bf 2b       	or	r27, r31
 580:	11 f4       	brne	.+4      	; 0x586 <__fp_round+0x18>
 582:	60 ff       	sbrs	r22, 0
 584:	04 c0       	rjmp	.+8      	; 0x58e <__fp_round+0x20>
 586:	6f 5f       	subi	r22, 0xFF	; 255
 588:	7f 4f       	sbci	r23, 0xFF	; 255
 58a:	8f 4f       	sbci	r24, 0xFF	; 255
 58c:	9f 4f       	sbci	r25, 0xFF	; 255
 58e:	08 95       	ret

00000590 <__fp_split3>:
 590:	57 fd       	sbrc	r21, 7
 592:	90 58       	subi	r25, 0x80	; 128
 594:	44 0f       	add	r20, r20
 596:	55 1f       	adc	r21, r21
 598:	59 f0       	breq	.+22     	; 0x5b0 <__fp_splitA+0x10>
 59a:	5f 3f       	cpi	r21, 0xFF	; 255
 59c:	71 f0       	breq	.+28     	; 0x5ba <__fp_splitA+0x1a>
 59e:	47 95       	ror	r20

000005a0 <__fp_splitA>:
 5a0:	88 0f       	add	r24, r24
 5a2:	97 fb       	bst	r25, 7
 5a4:	99 1f       	adc	r25, r25
 5a6:	61 f0       	breq	.+24     	; 0x5c0 <__fp_splitA+0x20>
 5a8:	9f 3f       	cpi	r25, 0xFF	; 255
 5aa:	79 f0       	breq	.+30     	; 0x5ca <__fp_splitA+0x2a>
 5ac:	87 95       	ror	r24
 5ae:	08 95       	ret
 5b0:	12 16       	cp	r1, r18
 5b2:	13 06       	cpc	r1, r19
 5b4:	14 06       	cpc	r1, r20
 5b6:	55 1f       	adc	r21, r21
 5b8:	f2 cf       	rjmp	.-28     	; 0x59e <__fp_split3+0xe>
 5ba:	46 95       	lsr	r20
 5bc:	f1 df       	rcall	.-30     	; 0x5a0 <__fp_splitA>
 5be:	08 c0       	rjmp	.+16     	; 0x5d0 <__fp_splitA+0x30>
 5c0:	16 16       	cp	r1, r22
 5c2:	17 06       	cpc	r1, r23
 5c4:	18 06       	cpc	r1, r24
 5c6:	99 1f       	adc	r25, r25
 5c8:	f1 cf       	rjmp	.-30     	; 0x5ac <__fp_splitA+0xc>
 5ca:	86 95       	lsr	r24
 5cc:	71 05       	cpc	r23, r1
 5ce:	61 05       	cpc	r22, r1
 5d0:	08 94       	sec
 5d2:	08 95       	ret

000005d4 <__fp_zero>:
 5d4:	e8 94       	clt

000005d6 <__fp_szero>:
 5d6:	bb 27       	eor	r27, r27
 5d8:	66 27       	eor	r22, r22
 5da:	77 27       	eor	r23, r23
 5dc:	cb 01       	movw	r24, r22
 5de:	97 f9       	bld	r25, 7
 5e0:	08 95       	ret

000005e2 <__gesf2>:
 5e2:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__fp_cmp>
 5e6:	08 f4       	brcc	.+2      	; 0x5ea <__gesf2+0x8>
 5e8:	8f ef       	ldi	r24, 0xFF	; 255
 5ea:	08 95       	ret

000005ec <__fp_cmp>:
 5ec:	99 0f       	add	r25, r25
 5ee:	00 08       	sbc	r0, r0
 5f0:	55 0f       	add	r21, r21
 5f2:	aa 0b       	sbc	r26, r26
 5f4:	e0 e8       	ldi	r30, 0x80	; 128
 5f6:	fe ef       	ldi	r31, 0xFE	; 254
 5f8:	16 16       	cp	r1, r22
 5fa:	17 06       	cpc	r1, r23
 5fc:	e8 07       	cpc	r30, r24
 5fe:	f9 07       	cpc	r31, r25
 600:	c0 f0       	brcs	.+48     	; 0x632 <__fp_cmp+0x46>
 602:	12 16       	cp	r1, r18
 604:	13 06       	cpc	r1, r19
 606:	e4 07       	cpc	r30, r20
 608:	f5 07       	cpc	r31, r21
 60a:	98 f0       	brcs	.+38     	; 0x632 <__fp_cmp+0x46>
 60c:	62 1b       	sub	r22, r18
 60e:	73 0b       	sbc	r23, r19
 610:	84 0b       	sbc	r24, r20
 612:	95 0b       	sbc	r25, r21
 614:	39 f4       	brne	.+14     	; 0x624 <__fp_cmp+0x38>
 616:	0a 26       	eor	r0, r26
 618:	61 f0       	breq	.+24     	; 0x632 <__fp_cmp+0x46>
 61a:	23 2b       	or	r18, r19
 61c:	24 2b       	or	r18, r20
 61e:	25 2b       	or	r18, r21
 620:	21 f4       	brne	.+8      	; 0x62a <__fp_cmp+0x3e>
 622:	08 95       	ret
 624:	0a 26       	eor	r0, r26
 626:	09 f4       	brne	.+2      	; 0x62a <__fp_cmp+0x3e>
 628:	a1 40       	sbci	r26, 0x01	; 1
 62a:	a6 95       	lsr	r26
 62c:	8f ef       	ldi	r24, 0xFF	; 255
 62e:	81 1d       	adc	r24, r1
 630:	81 1d       	adc	r24, r1
 632:	08 95       	ret

00000634 <dtostrf>:
 634:	ef 92       	push	r14
 636:	0f 93       	push	r16
 638:	1f 93       	push	r17
 63a:	cf 93       	push	r28
 63c:	df 93       	push	r29
 63e:	e8 01       	movw	r28, r16
 640:	47 fd       	sbrc	r20, 7
 642:	02 c0       	rjmp	.+4      	; 0x648 <dtostrf+0x14>
 644:	34 e0       	ldi	r19, 0x04	; 4
 646:	01 c0       	rjmp	.+2      	; 0x64a <dtostrf+0x16>
 648:	34 e1       	ldi	r19, 0x14	; 20
 64a:	04 2e       	mov	r0, r20
 64c:	00 0c       	add	r0, r0
 64e:	55 0b       	sbc	r21, r21
 650:	57 ff       	sbrs	r21, 7
 652:	03 c0       	rjmp	.+6      	; 0x65a <dtostrf+0x26>
 654:	51 95       	neg	r21
 656:	41 95       	neg	r20
 658:	51 09       	sbc	r21, r1
 65a:	e3 2e       	mov	r14, r19
 65c:	02 2f       	mov	r16, r18
 65e:	24 2f       	mov	r18, r20
 660:	ae 01       	movw	r20, r28
 662:	0e 94 3a 03 	call	0x674	; 0x674 <dtoa_prf>
 666:	ce 01       	movw	r24, r28
 668:	df 91       	pop	r29
 66a:	cf 91       	pop	r28
 66c:	1f 91       	pop	r17
 66e:	0f 91       	pop	r16
 670:	ef 90       	pop	r14
 672:	08 95       	ret

00000674 <dtoa_prf>:
 674:	a9 e0       	ldi	r26, 0x09	; 9
 676:	b0 e0       	ldi	r27, 0x00	; 0
 678:	e0 e4       	ldi	r30, 0x40	; 64
 67a:	f3 e0       	ldi	r31, 0x03	; 3
 67c:	0c 94 72 05 	jmp	0xae4	; 0xae4 <__prologue_saves__+0xc>
 680:	6a 01       	movw	r12, r20
 682:	12 2f       	mov	r17, r18
 684:	b0 2e       	mov	r11, r16
 686:	2b e3       	ldi	r18, 0x3B	; 59
 688:	20 17       	cp	r18, r16
 68a:	20 f0       	brcs	.+8      	; 0x694 <dtoa_prf+0x20>
 68c:	ff 24       	eor	r15, r15
 68e:	f3 94       	inc	r15
 690:	f0 0e       	add	r15, r16
 692:	02 c0       	rjmp	.+4      	; 0x698 <dtoa_prf+0x24>
 694:	2c e3       	ldi	r18, 0x3C	; 60
 696:	f2 2e       	mov	r15, r18
 698:	0f 2d       	mov	r16, r15
 69a:	27 e0       	ldi	r18, 0x07	; 7
 69c:	ae 01       	movw	r20, r28
 69e:	4f 5f       	subi	r20, 0xFF	; 255
 6a0:	5f 4f       	sbci	r21, 0xFF	; 255
 6a2:	0e 94 94 04 	call	0x928	; 0x928 <__ftoa_engine>
 6a6:	bc 01       	movw	r22, r24
 6a8:	49 81       	ldd	r20, Y+1	; 0x01
 6aa:	84 2f       	mov	r24, r20
 6ac:	89 70       	andi	r24, 0x09	; 9
 6ae:	81 30       	cpi	r24, 0x01	; 1
 6b0:	31 f0       	breq	.+12     	; 0x6be <dtoa_prf+0x4a>
 6b2:	e1 fc       	sbrc	r14, 1
 6b4:	06 c0       	rjmp	.+12     	; 0x6c2 <dtoa_prf+0x4e>
 6b6:	e0 fe       	sbrs	r14, 0
 6b8:	06 c0       	rjmp	.+12     	; 0x6c6 <dtoa_prf+0x52>
 6ba:	90 e2       	ldi	r25, 0x20	; 32
 6bc:	05 c0       	rjmp	.+10     	; 0x6c8 <dtoa_prf+0x54>
 6be:	9d e2       	ldi	r25, 0x2D	; 45
 6c0:	03 c0       	rjmp	.+6      	; 0x6c8 <dtoa_prf+0x54>
 6c2:	9b e2       	ldi	r25, 0x2B	; 43
 6c4:	01 c0       	rjmp	.+2      	; 0x6c8 <dtoa_prf+0x54>
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	5e 2d       	mov	r21, r14
 6ca:	50 71       	andi	r21, 0x10	; 16
 6cc:	43 ff       	sbrs	r20, 3
 6ce:	3c c0       	rjmp	.+120    	; 0x748 <dtoa_prf+0xd4>
 6d0:	91 11       	cpse	r25, r1
 6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <dtoa_prf+0x64>
 6d4:	83 e0       	ldi	r24, 0x03	; 3
 6d6:	01 c0       	rjmp	.+2      	; 0x6da <dtoa_prf+0x66>
 6d8:	84 e0       	ldi	r24, 0x04	; 4
 6da:	81 17       	cp	r24, r17
 6dc:	18 f4       	brcc	.+6      	; 0x6e4 <dtoa_prf+0x70>
 6de:	21 2f       	mov	r18, r17
 6e0:	28 1b       	sub	r18, r24
 6e2:	01 c0       	rjmp	.+2      	; 0x6e6 <dtoa_prf+0x72>
 6e4:	20 e0       	ldi	r18, 0x00	; 0
 6e6:	51 11       	cpse	r21, r1
 6e8:	0b c0       	rjmp	.+22     	; 0x700 <dtoa_prf+0x8c>
 6ea:	f6 01       	movw	r30, r12
 6ec:	82 2f       	mov	r24, r18
 6ee:	30 e2       	ldi	r19, 0x20	; 32
 6f0:	88 23       	and	r24, r24
 6f2:	19 f0       	breq	.+6      	; 0x6fa <dtoa_prf+0x86>
 6f4:	31 93       	st	Z+, r19
 6f6:	81 50       	subi	r24, 0x01	; 1
 6f8:	fb cf       	rjmp	.-10     	; 0x6f0 <dtoa_prf+0x7c>
 6fa:	c2 0e       	add	r12, r18
 6fc:	d1 1c       	adc	r13, r1
 6fe:	20 e0       	ldi	r18, 0x00	; 0
 700:	99 23       	and	r25, r25
 702:	29 f0       	breq	.+10     	; 0x70e <dtoa_prf+0x9a>
 704:	d6 01       	movw	r26, r12
 706:	9c 93       	st	X, r25
 708:	f6 01       	movw	r30, r12
 70a:	31 96       	adiw	r30, 0x01	; 1
 70c:	6f 01       	movw	r12, r30
 70e:	c6 01       	movw	r24, r12
 710:	03 96       	adiw	r24, 0x03	; 3
 712:	e2 fe       	sbrs	r14, 2
 714:	0a c0       	rjmp	.+20     	; 0x72a <dtoa_prf+0xb6>
 716:	3e e4       	ldi	r19, 0x4E	; 78
 718:	d6 01       	movw	r26, r12
 71a:	3c 93       	st	X, r19
 71c:	41 e4       	ldi	r20, 0x41	; 65
 71e:	11 96       	adiw	r26, 0x01	; 1
 720:	4c 93       	st	X, r20
 722:	11 97       	sbiw	r26, 0x01	; 1
 724:	12 96       	adiw	r26, 0x02	; 2
 726:	3c 93       	st	X, r19
 728:	06 c0       	rjmp	.+12     	; 0x736 <dtoa_prf+0xc2>
 72a:	3e e6       	ldi	r19, 0x6E	; 110
 72c:	f6 01       	movw	r30, r12
 72e:	30 83       	st	Z, r19
 730:	41 e6       	ldi	r20, 0x61	; 97
 732:	41 83       	std	Z+1, r20	; 0x01
 734:	32 83       	std	Z+2, r19	; 0x02
 736:	fc 01       	movw	r30, r24
 738:	32 2f       	mov	r19, r18
 73a:	40 e2       	ldi	r20, 0x20	; 32
 73c:	33 23       	and	r19, r19
 73e:	09 f4       	brne	.+2      	; 0x742 <dtoa_prf+0xce>
 740:	42 c0       	rjmp	.+132    	; 0x7c6 <dtoa_prf+0x152>
 742:	41 93       	st	Z+, r20
 744:	31 50       	subi	r19, 0x01	; 1
 746:	fa cf       	rjmp	.-12     	; 0x73c <dtoa_prf+0xc8>
 748:	42 ff       	sbrs	r20, 2
 74a:	44 c0       	rjmp	.+136    	; 0x7d4 <dtoa_prf+0x160>
 74c:	91 11       	cpse	r25, r1
 74e:	02 c0       	rjmp	.+4      	; 0x754 <dtoa_prf+0xe0>
 750:	83 e0       	ldi	r24, 0x03	; 3
 752:	01 c0       	rjmp	.+2      	; 0x756 <dtoa_prf+0xe2>
 754:	84 e0       	ldi	r24, 0x04	; 4
 756:	81 17       	cp	r24, r17
 758:	18 f4       	brcc	.+6      	; 0x760 <dtoa_prf+0xec>
 75a:	21 2f       	mov	r18, r17
 75c:	28 1b       	sub	r18, r24
 75e:	01 c0       	rjmp	.+2      	; 0x762 <dtoa_prf+0xee>
 760:	20 e0       	ldi	r18, 0x00	; 0
 762:	51 11       	cpse	r21, r1
 764:	0b c0       	rjmp	.+22     	; 0x77c <dtoa_prf+0x108>
 766:	f6 01       	movw	r30, r12
 768:	82 2f       	mov	r24, r18
 76a:	30 e2       	ldi	r19, 0x20	; 32
 76c:	88 23       	and	r24, r24
 76e:	19 f0       	breq	.+6      	; 0x776 <dtoa_prf+0x102>
 770:	31 93       	st	Z+, r19
 772:	81 50       	subi	r24, 0x01	; 1
 774:	fb cf       	rjmp	.-10     	; 0x76c <dtoa_prf+0xf8>
 776:	c2 0e       	add	r12, r18
 778:	d1 1c       	adc	r13, r1
 77a:	20 e0       	ldi	r18, 0x00	; 0
 77c:	99 23       	and	r25, r25
 77e:	29 f0       	breq	.+10     	; 0x78a <dtoa_prf+0x116>
 780:	d6 01       	movw	r26, r12
 782:	9c 93       	st	X, r25
 784:	f6 01       	movw	r30, r12
 786:	31 96       	adiw	r30, 0x01	; 1
 788:	6f 01       	movw	r12, r30
 78a:	c6 01       	movw	r24, r12
 78c:	03 96       	adiw	r24, 0x03	; 3
 78e:	e2 fe       	sbrs	r14, 2
 790:	0b c0       	rjmp	.+22     	; 0x7a8 <dtoa_prf+0x134>
 792:	39 e4       	ldi	r19, 0x49	; 73
 794:	d6 01       	movw	r26, r12
 796:	3c 93       	st	X, r19
 798:	3e e4       	ldi	r19, 0x4E	; 78
 79a:	11 96       	adiw	r26, 0x01	; 1
 79c:	3c 93       	st	X, r19
 79e:	11 97       	sbiw	r26, 0x01	; 1
 7a0:	36 e4       	ldi	r19, 0x46	; 70
 7a2:	12 96       	adiw	r26, 0x02	; 2
 7a4:	3c 93       	st	X, r19
 7a6:	07 c0       	rjmp	.+14     	; 0x7b6 <dtoa_prf+0x142>
 7a8:	39 e6       	ldi	r19, 0x69	; 105
 7aa:	f6 01       	movw	r30, r12
 7ac:	30 83       	st	Z, r19
 7ae:	3e e6       	ldi	r19, 0x6E	; 110
 7b0:	31 83       	std	Z+1, r19	; 0x01
 7b2:	36 e6       	ldi	r19, 0x66	; 102
 7b4:	32 83       	std	Z+2, r19	; 0x02
 7b6:	fc 01       	movw	r30, r24
 7b8:	32 2f       	mov	r19, r18
 7ba:	40 e2       	ldi	r20, 0x20	; 32
 7bc:	33 23       	and	r19, r19
 7be:	19 f0       	breq	.+6      	; 0x7c6 <dtoa_prf+0x152>
 7c0:	41 93       	st	Z+, r20
 7c2:	31 50       	subi	r19, 0x01	; 1
 7c4:	fb cf       	rjmp	.-10     	; 0x7bc <dtoa_prf+0x148>
 7c6:	fc 01       	movw	r30, r24
 7c8:	e2 0f       	add	r30, r18
 7ca:	f1 1d       	adc	r31, r1
 7cc:	10 82       	st	Z, r1
 7ce:	8e ef       	ldi	r24, 0xFE	; 254
 7d0:	9f ef       	ldi	r25, 0xFF	; 255
 7d2:	a6 c0       	rjmp	.+332    	; 0x920 <__stack+0xc1>
 7d4:	21 e0       	ldi	r18, 0x01	; 1
 7d6:	30 e0       	ldi	r19, 0x00	; 0
 7d8:	91 11       	cpse	r25, r1
 7da:	02 c0       	rjmp	.+4      	; 0x7e0 <dtoa_prf+0x16c>
 7dc:	20 e0       	ldi	r18, 0x00	; 0
 7de:	30 e0       	ldi	r19, 0x00	; 0
 7e0:	16 16       	cp	r1, r22
 7e2:	17 06       	cpc	r1, r23
 7e4:	1c f4       	brge	.+6      	; 0x7ec <dtoa_prf+0x178>
 7e6:	fb 01       	movw	r30, r22
 7e8:	31 96       	adiw	r30, 0x01	; 1
 7ea:	02 c0       	rjmp	.+4      	; 0x7f0 <dtoa_prf+0x17c>
 7ec:	e1 e0       	ldi	r30, 0x01	; 1
 7ee:	f0 e0       	ldi	r31, 0x00	; 0
 7f0:	2e 0f       	add	r18, r30
 7f2:	3f 1f       	adc	r19, r31
 7f4:	bb 20       	and	r11, r11
 7f6:	21 f0       	breq	.+8      	; 0x800 <dtoa_prf+0x18c>
 7f8:	eb 2d       	mov	r30, r11
 7fa:	f0 e0       	ldi	r31, 0x00	; 0
 7fc:	31 96       	adiw	r30, 0x01	; 1
 7fe:	02 c0       	rjmp	.+4      	; 0x804 <dtoa_prf+0x190>
 800:	e0 e0       	ldi	r30, 0x00	; 0
 802:	f0 e0       	ldi	r31, 0x00	; 0
 804:	2e 0f       	add	r18, r30
 806:	3f 1f       	adc	r19, r31
 808:	e1 2f       	mov	r30, r17
 80a:	f0 e0       	ldi	r31, 0x00	; 0
 80c:	2e 17       	cp	r18, r30
 80e:	3f 07       	cpc	r19, r31
 810:	1c f4       	brge	.+6      	; 0x818 <dtoa_prf+0x1a4>
 812:	12 1b       	sub	r17, r18
 814:	21 2f       	mov	r18, r17
 816:	01 c0       	rjmp	.+2      	; 0x81a <dtoa_prf+0x1a6>
 818:	20 e0       	ldi	r18, 0x00	; 0
 81a:	8e 2d       	mov	r24, r14
 81c:	88 71       	andi	r24, 0x18	; 24
 81e:	59 f4       	brne	.+22     	; 0x836 <dtoa_prf+0x1c2>
 820:	f6 01       	movw	r30, r12
 822:	82 2f       	mov	r24, r18
 824:	30 e2       	ldi	r19, 0x20	; 32
 826:	88 23       	and	r24, r24
 828:	19 f0       	breq	.+6      	; 0x830 <dtoa_prf+0x1bc>
 82a:	31 93       	st	Z+, r19
 82c:	81 50       	subi	r24, 0x01	; 1
 82e:	fb cf       	rjmp	.-10     	; 0x826 <dtoa_prf+0x1b2>
 830:	c2 0e       	add	r12, r18
 832:	d1 1c       	adc	r13, r1
 834:	20 e0       	ldi	r18, 0x00	; 0
 836:	99 23       	and	r25, r25
 838:	29 f0       	breq	.+10     	; 0x844 <dtoa_prf+0x1d0>
 83a:	d6 01       	movw	r26, r12
 83c:	9c 93       	st	X, r25
 83e:	f6 01       	movw	r30, r12
 840:	31 96       	adiw	r30, 0x01	; 1
 842:	6f 01       	movw	r12, r30
 844:	51 11       	cpse	r21, r1
 846:	0b c0       	rjmp	.+22     	; 0x85e <dtoa_prf+0x1ea>
 848:	f6 01       	movw	r30, r12
 84a:	82 2f       	mov	r24, r18
 84c:	90 e3       	ldi	r25, 0x30	; 48
 84e:	88 23       	and	r24, r24
 850:	19 f0       	breq	.+6      	; 0x858 <dtoa_prf+0x1e4>
 852:	91 93       	st	Z+, r25
 854:	81 50       	subi	r24, 0x01	; 1
 856:	fb cf       	rjmp	.-10     	; 0x84e <dtoa_prf+0x1da>
 858:	c2 0e       	add	r12, r18
 85a:	d1 1c       	adc	r13, r1
 85c:	20 e0       	ldi	r18, 0x00	; 0
 85e:	0f 2d       	mov	r16, r15
 860:	06 0f       	add	r16, r22
 862:	9a 81       	ldd	r25, Y+2	; 0x02
 864:	34 2f       	mov	r19, r20
 866:	30 71       	andi	r19, 0x10	; 16
 868:	44 ff       	sbrs	r20, 4
 86a:	03 c0       	rjmp	.+6      	; 0x872 <__stack+0x13>
 86c:	91 33       	cpi	r25, 0x31	; 49
 86e:	09 f4       	brne	.+2      	; 0x872 <__stack+0x13>
 870:	01 50       	subi	r16, 0x01	; 1
 872:	10 16       	cp	r1, r16
 874:	24 f4       	brge	.+8      	; 0x87e <__stack+0x1f>
 876:	09 30       	cpi	r16, 0x09	; 9
 878:	18 f0       	brcs	.+6      	; 0x880 <__stack+0x21>
 87a:	08 e0       	ldi	r16, 0x08	; 8
 87c:	01 c0       	rjmp	.+2      	; 0x880 <__stack+0x21>
 87e:	01 e0       	ldi	r16, 0x01	; 1
 880:	ab 01       	movw	r20, r22
 882:	77 ff       	sbrs	r23, 7
 884:	02 c0       	rjmp	.+4      	; 0x88a <__stack+0x2b>
 886:	40 e0       	ldi	r20, 0x00	; 0
 888:	50 e0       	ldi	r21, 0x00	; 0
 88a:	fb 01       	movw	r30, r22
 88c:	e4 1b       	sub	r30, r20
 88e:	f5 0b       	sbc	r31, r21
 890:	a1 e0       	ldi	r26, 0x01	; 1
 892:	b0 e0       	ldi	r27, 0x00	; 0
 894:	ac 0f       	add	r26, r28
 896:	bd 1f       	adc	r27, r29
 898:	ea 0f       	add	r30, r26
 89a:	fb 1f       	adc	r31, r27
 89c:	8e e2       	ldi	r24, 0x2E	; 46
 89e:	a8 2e       	mov	r10, r24
 8a0:	4b 01       	movw	r8, r22
 8a2:	80 1a       	sub	r8, r16
 8a4:	91 08       	sbc	r9, r1
 8a6:	0b 2d       	mov	r16, r11
 8a8:	10 e0       	ldi	r17, 0x00	; 0
 8aa:	11 95       	neg	r17
 8ac:	01 95       	neg	r16
 8ae:	11 09       	sbc	r17, r1
 8b0:	4f 3f       	cpi	r20, 0xFF	; 255
 8b2:	bf ef       	ldi	r27, 0xFF	; 255
 8b4:	5b 07       	cpc	r21, r27
 8b6:	21 f4       	brne	.+8      	; 0x8c0 <__stack+0x61>
 8b8:	d6 01       	movw	r26, r12
 8ba:	ac 92       	st	X, r10
 8bc:	11 96       	adiw	r26, 0x01	; 1
 8be:	6d 01       	movw	r12, r26
 8c0:	64 17       	cp	r22, r20
 8c2:	75 07       	cpc	r23, r21
 8c4:	2c f0       	brlt	.+10     	; 0x8d0 <__stack+0x71>
 8c6:	84 16       	cp	r8, r20
 8c8:	95 06       	cpc	r9, r21
 8ca:	14 f4       	brge	.+4      	; 0x8d0 <__stack+0x71>
 8cc:	81 81       	ldd	r24, Z+1	; 0x01
 8ce:	01 c0       	rjmp	.+2      	; 0x8d2 <__stack+0x73>
 8d0:	80 e3       	ldi	r24, 0x30	; 48
 8d2:	41 50       	subi	r20, 0x01	; 1
 8d4:	51 09       	sbc	r21, r1
 8d6:	31 96       	adiw	r30, 0x01	; 1
 8d8:	d6 01       	movw	r26, r12
 8da:	11 96       	adiw	r26, 0x01	; 1
 8dc:	7d 01       	movw	r14, r26
 8de:	40 17       	cp	r20, r16
 8e0:	51 07       	cpc	r21, r17
 8e2:	24 f0       	brlt	.+8      	; 0x8ec <__stack+0x8d>
 8e4:	d6 01       	movw	r26, r12
 8e6:	8c 93       	st	X, r24
 8e8:	67 01       	movw	r12, r14
 8ea:	e2 cf       	rjmp	.-60     	; 0x8b0 <__stack+0x51>
 8ec:	64 17       	cp	r22, r20
 8ee:	75 07       	cpc	r23, r21
 8f0:	39 f4       	brne	.+14     	; 0x900 <__stack+0xa1>
 8f2:	96 33       	cpi	r25, 0x36	; 54
 8f4:	20 f4       	brcc	.+8      	; 0x8fe <__stack+0x9f>
 8f6:	95 33       	cpi	r25, 0x35	; 53
 8f8:	19 f4       	brne	.+6      	; 0x900 <__stack+0xa1>
 8fa:	31 11       	cpse	r19, r1
 8fc:	01 c0       	rjmp	.+2      	; 0x900 <__stack+0xa1>
 8fe:	81 e3       	ldi	r24, 0x31	; 49
 900:	f6 01       	movw	r30, r12
 902:	80 83       	st	Z, r24
 904:	f7 01       	movw	r30, r14
 906:	82 2f       	mov	r24, r18
 908:	90 e2       	ldi	r25, 0x20	; 32
 90a:	88 23       	and	r24, r24
 90c:	19 f0       	breq	.+6      	; 0x914 <__stack+0xb5>
 90e:	91 93       	st	Z+, r25
 910:	81 50       	subi	r24, 0x01	; 1
 912:	fb cf       	rjmp	.-10     	; 0x90a <__stack+0xab>
 914:	f7 01       	movw	r30, r14
 916:	e2 0f       	add	r30, r18
 918:	f1 1d       	adc	r31, r1
 91a:	10 82       	st	Z, r1
 91c:	80 e0       	ldi	r24, 0x00	; 0
 91e:	90 e0       	ldi	r25, 0x00	; 0
 920:	29 96       	adiw	r28, 0x09	; 9
 922:	ec e0       	ldi	r30, 0x0C	; 12
 924:	0c 94 8e 05 	jmp	0xb1c	; 0xb1c <__epilogue_restores__+0xc>

00000928 <__ftoa_engine>:
 928:	28 30       	cpi	r18, 0x08	; 8
 92a:	08 f0       	brcs	.+2      	; 0x92e <__ftoa_engine+0x6>
 92c:	27 e0       	ldi	r18, 0x07	; 7
 92e:	33 27       	eor	r19, r19
 930:	da 01       	movw	r26, r20
 932:	99 0f       	add	r25, r25
 934:	31 1d       	adc	r19, r1
 936:	87 fd       	sbrc	r24, 7
 938:	91 60       	ori	r25, 0x01	; 1
 93a:	00 96       	adiw	r24, 0x00	; 0
 93c:	61 05       	cpc	r22, r1
 93e:	71 05       	cpc	r23, r1
 940:	39 f4       	brne	.+14     	; 0x950 <__ftoa_engine+0x28>
 942:	32 60       	ori	r19, 0x02	; 2
 944:	2e 5f       	subi	r18, 0xFE	; 254
 946:	3d 93       	st	X+, r19
 948:	30 e3       	ldi	r19, 0x30	; 48
 94a:	2a 95       	dec	r18
 94c:	e1 f7       	brne	.-8      	; 0x946 <__ftoa_engine+0x1e>
 94e:	08 95       	ret
 950:	9f 3f       	cpi	r25, 0xFF	; 255
 952:	30 f0       	brcs	.+12     	; 0x960 <__ftoa_engine+0x38>
 954:	80 38       	cpi	r24, 0x80	; 128
 956:	71 05       	cpc	r23, r1
 958:	61 05       	cpc	r22, r1
 95a:	09 f0       	breq	.+2      	; 0x95e <__ftoa_engine+0x36>
 95c:	3c 5f       	subi	r19, 0xFC	; 252
 95e:	3c 5f       	subi	r19, 0xFC	; 252
 960:	3d 93       	st	X+, r19
 962:	91 30       	cpi	r25, 0x01	; 1
 964:	08 f0       	brcs	.+2      	; 0x968 <__ftoa_engine+0x40>
 966:	80 68       	ori	r24, 0x80	; 128
 968:	91 1d       	adc	r25, r1
 96a:	df 93       	push	r29
 96c:	cf 93       	push	r28
 96e:	1f 93       	push	r17
 970:	0f 93       	push	r16
 972:	ff 92       	push	r15
 974:	ef 92       	push	r14
 976:	19 2f       	mov	r17, r25
 978:	98 7f       	andi	r25, 0xF8	; 248
 97a:	96 95       	lsr	r25
 97c:	e9 2f       	mov	r30, r25
 97e:	96 95       	lsr	r25
 980:	96 95       	lsr	r25
 982:	e9 0f       	add	r30, r25
 984:	ff 27       	eor	r31, r31
 986:	e2 55       	subi	r30, 0x52	; 82
 988:	ff 4f       	sbci	r31, 0xFF	; 255
 98a:	99 27       	eor	r25, r25
 98c:	33 27       	eor	r19, r19
 98e:	ee 24       	eor	r14, r14
 990:	ff 24       	eor	r15, r15
 992:	a7 01       	movw	r20, r14
 994:	e7 01       	movw	r28, r14
 996:	05 90       	lpm	r0, Z+
 998:	08 94       	sec
 99a:	07 94       	ror	r0
 99c:	28 f4       	brcc	.+10     	; 0x9a8 <__ftoa_engine+0x80>
 99e:	36 0f       	add	r19, r22
 9a0:	e7 1e       	adc	r14, r23
 9a2:	f8 1e       	adc	r15, r24
 9a4:	49 1f       	adc	r20, r25
 9a6:	51 1d       	adc	r21, r1
 9a8:	66 0f       	add	r22, r22
 9aa:	77 1f       	adc	r23, r23
 9ac:	88 1f       	adc	r24, r24
 9ae:	99 1f       	adc	r25, r25
 9b0:	06 94       	lsr	r0
 9b2:	a1 f7       	brne	.-24     	; 0x99c <__ftoa_engine+0x74>
 9b4:	05 90       	lpm	r0, Z+
 9b6:	07 94       	ror	r0
 9b8:	28 f4       	brcc	.+10     	; 0x9c4 <__ftoa_engine+0x9c>
 9ba:	e7 0e       	add	r14, r23
 9bc:	f8 1e       	adc	r15, r24
 9be:	49 1f       	adc	r20, r25
 9c0:	56 1f       	adc	r21, r22
 9c2:	c1 1d       	adc	r28, r1
 9c4:	77 0f       	add	r23, r23
 9c6:	88 1f       	adc	r24, r24
 9c8:	99 1f       	adc	r25, r25
 9ca:	66 1f       	adc	r22, r22
 9cc:	06 94       	lsr	r0
 9ce:	a1 f7       	brne	.-24     	; 0x9b8 <__ftoa_engine+0x90>
 9d0:	05 90       	lpm	r0, Z+
 9d2:	07 94       	ror	r0
 9d4:	28 f4       	brcc	.+10     	; 0x9e0 <__ftoa_engine+0xb8>
 9d6:	f8 0e       	add	r15, r24
 9d8:	49 1f       	adc	r20, r25
 9da:	56 1f       	adc	r21, r22
 9dc:	c7 1f       	adc	r28, r23
 9de:	d1 1d       	adc	r29, r1
 9e0:	88 0f       	add	r24, r24
 9e2:	99 1f       	adc	r25, r25
 9e4:	66 1f       	adc	r22, r22
 9e6:	77 1f       	adc	r23, r23
 9e8:	06 94       	lsr	r0
 9ea:	a1 f7       	brne	.-24     	; 0x9d4 <__ftoa_engine+0xac>
 9ec:	05 90       	lpm	r0, Z+
 9ee:	07 94       	ror	r0
 9f0:	20 f4       	brcc	.+8      	; 0x9fa <__ftoa_engine+0xd2>
 9f2:	49 0f       	add	r20, r25
 9f4:	56 1f       	adc	r21, r22
 9f6:	c7 1f       	adc	r28, r23
 9f8:	d8 1f       	adc	r29, r24
 9fa:	99 0f       	add	r25, r25
 9fc:	66 1f       	adc	r22, r22
 9fe:	77 1f       	adc	r23, r23
 a00:	88 1f       	adc	r24, r24
 a02:	06 94       	lsr	r0
 a04:	a9 f7       	brne	.-22     	; 0x9f0 <__ftoa_engine+0xc8>
 a06:	84 91       	lpm	r24, Z
 a08:	10 95       	com	r17
 a0a:	17 70       	andi	r17, 0x07	; 7
 a0c:	41 f0       	breq	.+16     	; 0xa1e <__ftoa_engine+0xf6>
 a0e:	d6 95       	lsr	r29
 a10:	c7 95       	ror	r28
 a12:	57 95       	ror	r21
 a14:	47 95       	ror	r20
 a16:	f7 94       	ror	r15
 a18:	e7 94       	ror	r14
 a1a:	1a 95       	dec	r17
 a1c:	c1 f7       	brne	.-16     	; 0xa0e <__ftoa_engine+0xe6>
 a1e:	e4 e5       	ldi	r30, 0x54	; 84
 a20:	f0 e0       	ldi	r31, 0x00	; 0
 a22:	68 94       	set
 a24:	15 90       	lpm	r1, Z+
 a26:	15 91       	lpm	r17, Z+
 a28:	35 91       	lpm	r19, Z+
 a2a:	65 91       	lpm	r22, Z+
 a2c:	95 91       	lpm	r25, Z+
 a2e:	05 90       	lpm	r0, Z+
 a30:	7f e2       	ldi	r23, 0x2F	; 47
 a32:	73 95       	inc	r23
 a34:	e1 18       	sub	r14, r1
 a36:	f1 0a       	sbc	r15, r17
 a38:	43 0b       	sbc	r20, r19
 a3a:	56 0b       	sbc	r21, r22
 a3c:	c9 0b       	sbc	r28, r25
 a3e:	d0 09       	sbc	r29, r0
 a40:	c0 f7       	brcc	.-16     	; 0xa32 <__ftoa_engine+0x10a>
 a42:	e1 0c       	add	r14, r1
 a44:	f1 1e       	adc	r15, r17
 a46:	43 1f       	adc	r20, r19
 a48:	56 1f       	adc	r21, r22
 a4a:	c9 1f       	adc	r28, r25
 a4c:	d0 1d       	adc	r29, r0
 a4e:	7e f4       	brtc	.+30     	; 0xa6e <__ftoa_engine+0x146>
 a50:	70 33       	cpi	r23, 0x30	; 48
 a52:	11 f4       	brne	.+4      	; 0xa58 <__ftoa_engine+0x130>
 a54:	8a 95       	dec	r24
 a56:	e6 cf       	rjmp	.-52     	; 0xa24 <__ftoa_engine+0xfc>
 a58:	e8 94       	clt
 a5a:	01 50       	subi	r16, 0x01	; 1
 a5c:	30 f0       	brcs	.+12     	; 0xa6a <__ftoa_engine+0x142>
 a5e:	08 0f       	add	r16, r24
 a60:	0a f4       	brpl	.+2      	; 0xa64 <__ftoa_engine+0x13c>
 a62:	00 27       	eor	r16, r16
 a64:	02 17       	cp	r16, r18
 a66:	08 f4       	brcc	.+2      	; 0xa6a <__ftoa_engine+0x142>
 a68:	20 2f       	mov	r18, r16
 a6a:	23 95       	inc	r18
 a6c:	02 2f       	mov	r16, r18
 a6e:	7a 33       	cpi	r23, 0x3A	; 58
 a70:	28 f0       	brcs	.+10     	; 0xa7c <__ftoa_engine+0x154>
 a72:	79 e3       	ldi	r23, 0x39	; 57
 a74:	7d 93       	st	X+, r23
 a76:	2a 95       	dec	r18
 a78:	e9 f7       	brne	.-6      	; 0xa74 <__ftoa_engine+0x14c>
 a7a:	10 c0       	rjmp	.+32     	; 0xa9c <__ftoa_engine+0x174>
 a7c:	7d 93       	st	X+, r23
 a7e:	2a 95       	dec	r18
 a80:	89 f6       	brne	.-94     	; 0xa24 <__ftoa_engine+0xfc>
 a82:	06 94       	lsr	r0
 a84:	97 95       	ror	r25
 a86:	67 95       	ror	r22
 a88:	37 95       	ror	r19
 a8a:	17 95       	ror	r17
 a8c:	17 94       	ror	r1
 a8e:	e1 18       	sub	r14, r1
 a90:	f1 0a       	sbc	r15, r17
 a92:	43 0b       	sbc	r20, r19
 a94:	56 0b       	sbc	r21, r22
 a96:	c9 0b       	sbc	r28, r25
 a98:	d0 09       	sbc	r29, r0
 a9a:	98 f0       	brcs	.+38     	; 0xac2 <__ftoa_engine+0x19a>
 a9c:	23 95       	inc	r18
 a9e:	7e 91       	ld	r23, -X
 aa0:	73 95       	inc	r23
 aa2:	7a 33       	cpi	r23, 0x3A	; 58
 aa4:	08 f0       	brcs	.+2      	; 0xaa8 <__ftoa_engine+0x180>
 aa6:	70 e3       	ldi	r23, 0x30	; 48
 aa8:	7c 93       	st	X, r23
 aaa:	20 13       	cpse	r18, r16
 aac:	b8 f7       	brcc	.-18     	; 0xa9c <__ftoa_engine+0x174>
 aae:	7e 91       	ld	r23, -X
 ab0:	70 61       	ori	r23, 0x10	; 16
 ab2:	7d 93       	st	X+, r23
 ab4:	30 f0       	brcs	.+12     	; 0xac2 <__ftoa_engine+0x19a>
 ab6:	83 95       	inc	r24
 ab8:	71 e3       	ldi	r23, 0x31	; 49
 aba:	7d 93       	st	X+, r23
 abc:	70 e3       	ldi	r23, 0x30	; 48
 abe:	2a 95       	dec	r18
 ac0:	e1 f7       	brne	.-8      	; 0xaba <__ftoa_engine+0x192>
 ac2:	11 24       	eor	r1, r1
 ac4:	ef 90       	pop	r14
 ac6:	ff 90       	pop	r15
 ac8:	0f 91       	pop	r16
 aca:	1f 91       	pop	r17
 acc:	cf 91       	pop	r28
 ace:	df 91       	pop	r29
 ad0:	99 27       	eor	r25, r25
 ad2:	87 fd       	sbrc	r24, 7
 ad4:	90 95       	com	r25
 ad6:	08 95       	ret

00000ad8 <__prologue_saves__>:
 ad8:	2f 92       	push	r2
 ada:	3f 92       	push	r3
 adc:	4f 92       	push	r4
 ade:	5f 92       	push	r5
 ae0:	6f 92       	push	r6
 ae2:	7f 92       	push	r7
 ae4:	8f 92       	push	r8
 ae6:	9f 92       	push	r9
 ae8:	af 92       	push	r10
 aea:	bf 92       	push	r11
 aec:	cf 92       	push	r12
 aee:	df 92       	push	r13
 af0:	ef 92       	push	r14
 af2:	ff 92       	push	r15
 af4:	0f 93       	push	r16
 af6:	1f 93       	push	r17
 af8:	cf 93       	push	r28
 afa:	df 93       	push	r29
 afc:	cd b7       	in	r28, 0x3d	; 61
 afe:	de b7       	in	r29, 0x3e	; 62
 b00:	ca 1b       	sub	r28, r26
 b02:	db 0b       	sbc	r29, r27
 b04:	0f b6       	in	r0, 0x3f	; 63
 b06:	f8 94       	cli
 b08:	de bf       	out	0x3e, r29	; 62
 b0a:	0f be       	out	0x3f, r0	; 63
 b0c:	cd bf       	out	0x3d, r28	; 61
 b0e:	09 94       	ijmp

00000b10 <__epilogue_restores__>:
 b10:	2a 88       	ldd	r2, Y+18	; 0x12
 b12:	39 88       	ldd	r3, Y+17	; 0x11
 b14:	48 88       	ldd	r4, Y+16	; 0x10
 b16:	5f 84       	ldd	r5, Y+15	; 0x0f
 b18:	6e 84       	ldd	r6, Y+14	; 0x0e
 b1a:	7d 84       	ldd	r7, Y+13	; 0x0d
 b1c:	8c 84       	ldd	r8, Y+12	; 0x0c
 b1e:	9b 84       	ldd	r9, Y+11	; 0x0b
 b20:	aa 84       	ldd	r10, Y+10	; 0x0a
 b22:	b9 84       	ldd	r11, Y+9	; 0x09
 b24:	c8 84       	ldd	r12, Y+8	; 0x08
 b26:	df 80       	ldd	r13, Y+7	; 0x07
 b28:	ee 80       	ldd	r14, Y+6	; 0x06
 b2a:	fd 80       	ldd	r15, Y+5	; 0x05
 b2c:	0c 81       	ldd	r16, Y+4	; 0x04
 b2e:	1b 81       	ldd	r17, Y+3	; 0x03
 b30:	aa 81       	ldd	r26, Y+2	; 0x02
 b32:	b9 81       	ldd	r27, Y+1	; 0x01
 b34:	ce 0f       	add	r28, r30
 b36:	d1 1d       	adc	r29, r1
 b38:	0f b6       	in	r0, 0x3f	; 63
 b3a:	f8 94       	cli
 b3c:	de bf       	out	0x3e, r29	; 62
 b3e:	0f be       	out	0x3f, r0	; 63
 b40:	cd bf       	out	0x3d, r28	; 61
 b42:	ed 01       	movw	r28, r26
 b44:	08 95       	ret

00000b46 <_exit>:
 b46:	f8 94       	cli

00000b48 <__stop_program>:
 b48:	ff cf       	rjmp	.-2      	; 0xb48 <__stop_program>
